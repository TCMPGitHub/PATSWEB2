<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.ReportViewer.Mvc</name>
    </assembly>
    <members>
        <member name="T:Telerik.ReportViewer.Mvc.IClientEventsBuilder">
            <summary>
            Represents a builder that provides a way to initialize the event handlers of the report viewer.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.RenderingBegin(System.String)">
            <summary>
            Attach the event handler that will be called when the rendering of the report begins.
            </summary>
            <param name="onRenderingBegin">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.RenderingEnd(System.String)">
            <summary>
            Attach the event handler that will be called when the rendering of the report ends.
            </summary>
            <param name="onRenderingEnd">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.PrintBegin(System.String)">
            <summary>
            Attach the event handler that will be called prior to starting the print report command.
            </summary>
            <param name="onPrintBegin">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.PrintEnd(System.String)">
            <summary>
            Attach the event handler that will be called when the print document (Adobe PDF) is ready for download, but prior to being send to the printer.
            </summary>
            <param name="onPrintEnd">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.ExportBegin(System.String)">
            <summary>
            Attach the event handler that will be called prior to starting the report export command.
            </summary>
            <param name="onExportBegin">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.ExportEnd(System.String)">
            <summary>
            Attach the event handler that will be called when the exported document is ready for download, but prior to the actual downloading.
            </summary>
            <param name="onExportEnd">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.UpdateUi(System.String)">
            <summary>
            Attach the event handler that will be called every time the UI needs an update; 
            can be used for changing the UI of the report viewer while interacting with the reports. 
            </summary>
            <param name="onUpdateUi">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.PageReady(System.String)">
            <summary>
            Attach the event handler that will be called every time a page from the report is rendered and ready for display.
            </summary>
            <param name="onPageReady">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.Error(System.String)">
            <summary>
            Attach the event handler that will be called when an error occurs.
            </summary>
            <param name="onError">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.Ready(System.String)">
            <summary>
            Attach the event handler that will be called when the report viewer template is loaded.
            </summary>
            <param name="onReady">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.InteractiveActionExecuting(System.String)">
            <summary>
            Attach the event handler that will be called when an action is executed.
            </summary>
            <param name="onInteractiveActionExecuting">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.InteractiveActionEnter(System.String)">
            <summary>
            Attach the event handler that will be called when the mouse cursor enters the action's report item area.
            </summary>
            <param name="onInteractiveActionEnter">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.InteractiveActionLeave(System.String)">
            <summary>
            Attach the event handler that will be called when the mouse cursor leaves the action's report item area.
            </summary>
            <param name="onInteractiveActionLeave">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IClientEventsBuilder.ViewerToolTipOpening(System.String)">
            <summary>
            Attach the event handler that will be called when a tooltip is being opened.
            </summary>
            <param name="onViewerToolTipOpening">The name of the handler as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.CustomParameterEditor">
            <summary>
            Represents a custom parameter editor.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.CustomParameterEditor.MatchFunction">
            <summary>
            The name of the match function as string, without parentheses.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.CustomParameterEditor.CreateEditorFunction">
            <summary>
            The name of the createEditor function as string, without parentheses.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.HtmlHelpers">
            <summary>
            A class that contains a collection of all Telerik Reporting widgets
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.HtmlHelpers.TelerikReporting(System.Web.Mvc.HtmlHelper)">
            <summary>
            A factory used to generate the javascript representation of Telerik Reporting widgets
            </summary>
            <param name="htmlHelper"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.TelerikReportingFactory"/></returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder">
            <summary>
            Represents a builder that provides a way to initialize the parameter editors of the report viewer.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.MultiSelectEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle parameters that have provided AvailableValues and MultiValue set to true.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.SingleSelectEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle parameters that have provided AvailableValues and MultiValue set to false.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.MultiValueEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle parameters that have MultiValue set to true but have not provided AvailableValues.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.DateTimeEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle DateTime parameters.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.StringEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle String parameters.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.NumberEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle Numeric parameters.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.BooleanEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle Boolean parameters.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.DefaultEditor(System.String)">
            <summary>
            Attach the parameter editor that will handle non defined parameters.
            </summary>
            <param name="onRenderingBegin">The name of the createEditor function as string, without parentheses.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IParameterEditorsBuilder.CustomEditors(Telerik.ReportViewer.Mvc.CustomParameterEditor[])">
            <summary>
            Attach parameter editors that can handle custom scenarios.
            For example MultiValue parameter of DateTime type.
            Custom editors are added before all other editors, in the specified order.
            </summary>
            <param name="onRenderingBegin">The custom parameter editor with both a match function and createEditor function.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.IReportResolver">
            <summary>
            Represents a resolver that creates string representation of a report document reference from a <see cref="T:Telerik.Reporting.ReportSource"/> 
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportResolver.Resolve(Telerik.Reporting.ReportSource)">
            <summary>
            Creates a string representation based on a <see cref="T:Telerik.Reporting.ReportSource"/>.
            </summary>
            <param name="reportSource">The report source to resolve</param>
            <returns>The resulting string representation</returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder">
            <summary>
            Represents a builder that provides a way to initialize the report viewer
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.Id(System.String)">
            <summary>
            Each report viewer must have an id - it will be used by the initialization script 
            to find the element and initialize the report viewer.
            </summary>
            <param name="id"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ServiceUrl(System.String)">
            <summary>
            The url of the service which will provide the report viewer with reports.
            The service must be properly configured so that the report viewer can 
            successfully communicate with the server. 
            For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
            </summary>
            <param name="serviceUrl"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ReportServer(Telerik.ReportViewer.Mvc.ReportServer)">
            <summary>
            The connection data of the report server that hosts the reports.
            For more information see http://www.telerik.com/help/reporting/html5-report-viewer-howto-use-it-with-reportserver.html.
            </summary>
            <param name="reportServer"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.AuthenticationToken(System.String)">
            <summary>
            The encoded authentication token used to authenticate the requests.
            </summary>
            <param name="AuthenticationToken"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.TemplateUrl(System.String)">
            <summary>
            The url for the report viewer template. The template can be edited - 
            new functionalities can be added and not needed ones can be removed.
            For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
            </summary>
            <param name="templateUrl"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.InitialPageAreaImageUrl(System.String)">
            <summary>
            The image URL for the PageArea background image. Used only when the parameter values are missing or invalid.
            </summary>
            <param name="initialPageAreaImageUrl"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ReportSource(Telerik.Reporting.ReportSource)">
            <summary>
            Sets the <see cref="T:Telerik.Reporting.ReportSource"/> 
            for the report displayed in the viewer.
            </summary>
            <param name="reportSource"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ReportSource(Telerik.Reporting.TypeReportSource)">
            <summary>
            Sets the <see cref="T:Telerik.Reporting.ReportSource"/> as <see cref="T:Telerik.Reporting.TypeReportSource"/>
            for the report displayed in the viewer.
            </summary>
            <param name="typeReportSource"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.SendEmail(Telerik.ReportViewer.Mvc.SendEmail)">
            <summary>
            The send e-mail message options
            </summary>
            <param name="sendEmailOptions"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.Parameters(Telerik.ReportViewer.Mvc.Parameters)">
            <summary>
            The parameters options
            </summary>
            <param name="parametersOptions"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ReportSource(Telerik.Reporting.UriReportSource)">
            <summary>
            Sets the <see cref="T:Telerik.Reporting.ReportSource"/> as <see cref="T:Telerik.Reporting.UriReportSource"/>
            for the report displayed in the viewer.
            </summary>
            <param name="uriReportSource"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ReportSource(System.String)">
            <summary>
            Sets the <see cref="T:Telerik.Reporting.ReportSource"/> as <see cref="T:System.String"/>
            for the report displayed in the viewer.
            </summary>
            <param name="report"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ReportSource(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the <see cref="T:Telerik.Reporting.ReportSource"/> as <see cref="T:System.String"/>
            for the report displayed in the viewer.
            Sets the parameters of the <see cref="T:Telerik.Reporting.ReportSource"/> 
            as <see cref="T:System.Collections.Generic.IDictionary`2">IDictionary&lt;System.String, System.Object&gt;</see>
            </summary>
            <param name="report"></param>
            <param name="parameters"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ViewMode(Telerik.ReportViewer.Mvc.ViewModes)">
            <summary>
            Specifies whether the viewer is in interactive or print preview mode.
            PRINT_PREVIEW - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
            INTERACTIVE - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
            </summary>
            <param name="viewMode"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ViewMode(Telerik.ReportViewer.Mvc.ViewMode)">
            <summary>
            Specifies whether the viewer is in interactive or print preview mode.
            PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
            Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
            </summary>
            <param name="viewMode"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.PageMode(Telerik.ReportViewer.Mvc.PageMode)">
            <summary>
            Specifies whether the viewer is in Continuous scroll or Single page mode.
            SinglePage - Displays only one report page in PageArea container
            ContinuousScroll - Displays large amount of report pages by appending additional pages on demand. 
            </summary>
            <param name="pageMode"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ScaleMode(Telerik.ReportViewer.Mvc.ScaleModes)">
            <summary>
            Sets the scale mode of the viewer.
            Three modes exist currently:
            FIT_PAGE - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
            FIT_PAGE_WIDTH - The report will be zoomed in or out so that the width of the screen and the width of the report match.
            SPECIFIC - Uses the scale to zoom in and out the report.
            </summary>
            <param name="scaleMode"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ScaleMode(Telerik.ReportViewer.Mvc.ScaleMode)">
            <summary>
            Sets the scale mode of the viewer.
            Three modes exist currently:
            FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
            FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
            Specific - Uses the scale to zoom in and out the report.
            </summary>
            <param name="scaleMode"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.Scale(System.Double)">
            <summary>
            Zoom in and out the report using the scale.
            1.0 is equal to 100%, i.e. the original size of the report.
            </summary>
            <param name="scale"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ReportResolver(Telerik.ReportViewer.Mvc.IReportResolver)">
            <summary>
            Sets the chain of report resolvers
            </summary>
            <param name="resolver"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.PersistSession(System.Boolean)">
            <summary>
            Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback). 
            The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
            </summary>
            <param name="persistSession"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.DirectPrint(System.Boolean)">
            <summary>
            Sets whether the viewer should use the browser's Adobe PDF plug-in for the print action.
            </summary>
            <param name="directPrint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.PrintMode(Telerik.ReportViewer.Mvc.PrintMode)">
            <summary>
            Sets the print mode of the viewer.
            Three modes exist currently:
            AutoSelect - Specifies that the viewer should automatically determine how to print: through the browser's PDF plug-in or through export to a PDF file.
            ForcePDFPlugin - Specifies that the viewer should always use the PDF plugin regardless of the browser's version and settings.
            ForcePDFFile - Specifies that the viewer should always export the report document to PDF format with the 'print' script enabled.
            </summary>
            <param name="printMode">Specifies the print mode of the viewer.</param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.DisabledButtonClass(System.String)">
            <summary>
            Sets the class to be used by buttons in the disabled state.
            </summary>
            <param name="disabledButtonClass"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ParametersAreaVisible(System.Boolean)">
            <summary>
            Sets the viewer’s parameters area initial visibility state.
            </summary>
            <param name="visible"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.DocumentMapVisible(System.Boolean)">
            <summary>
            Sets the viewer’s document map initial visibility state.
            </summary>
            <param name="visible"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.CheckedButtonClass(System.String)">
            <summary>
            Sets the class to be used by buttons in the checked state.
            </summary>
            <param name="checkedButtonClass"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.Deferred">
            <summary>
            Defers the script initialization statement.
            </summary>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ClientEvents(System.Action{Telerik.ReportViewer.Mvc.IClientEventsBuilder})">
            <summary>
            Provides a way to initialize the event handlers of the report viewer.
            </summary>
            <param name="clientEventsBuilder"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.ParameterEditors(System.Action{Telerik.ReportViewer.Mvc.IParameterEditorsBuilder})">
            <summary>
            Provides a way to initialize the parameter editors of the report viewer.
            </summary>
            <param name="parameterEditorsBuilder"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.EnableAccessibility(System.Boolean)">
            <summary>
            Enables or disables the accessibility features of the report viewer and its contents.
            </summary>
            <param name="enable"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.AccessibilityKeyMap(Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap)">
            <summary>
            Sets the key mappings used in accessibility mode.
            </summary>
            <param name="keyMap"><see cref="!:Telerik.ReportViewer.Html5.Common.AccessibilityKeyMap"/></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.IReportViewerBuilder.SearchMetadataOnDemand(System.Boolean)">
            <summary>
            Determines whether the search metadata will be delivered on demand or by default.
            </summary>
            <remarks>
            Enabling search will notify the report engine to produce search metadata while rendering the report. 
            This metadata is used by the report viewer in search dialog and in the report viewer area for highlighting the found and selected items.
            Default value: false
            </remarks>
            <param name="enable"></param>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.ITelerikReportingFactory">
            <summary>
            Represents a factory used to generate the JavaScript representation of Telerik Reporting widgets
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.ITelerikReportingFactory.ReportViewer">
            <summary>
            Represents the MVC ReportViewer wrapper.
            </summary>
            <returns><see cref="T:Telerik.ReportViewer.Mvc.IReportViewerBuilder"/></returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.ITelerikReportingFactory.DeferredScripts(System.Boolean)">
            <summary>
            Renders deferred initialization statements.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.PageMode">
            <summary>
            Specifies the page mode for the ReportViewer control.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.PageMode.ContinuousScroll">
            <summary>
            Displays large amount of report pages by appending additional pages on demand.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.PageMode.SinglePage">
            <summary>
            Displays only one report page in PageArea container
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.Parameters">
            <summary>
            Provides a class for the Parameters options.
            Contains the Editors object property.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.Parameters.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.Parameters.Editors">
            <summary>
            Definds the parameters editors types
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.Editors">
            <summary>
            Provides a class for the Parameters Editors options.
            Contains the SingleSelect and MultiSelect properties.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.EditorTypes">
            <summary>
             List of the possible parameters editors types.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.PrintMode">
            <summary>
            Specifies how the viewer should handle the print command.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.PrintMode.AutoSelect">
            <summary>
            Specifies that the viewer should automatically determine how to print: through the browser's PDF plug-in or through export to a PDF file.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.PrintMode.ForcePDFPlugin">
            <summary>
            Specifies that the viewer should always use the PDF plugin regardless of the browser's version and settings.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.PrintMode.ForcePDFFile">
            <summary>
            Specifies that the viewer should always export the report document to PDF format with the 'print' script enabled.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.ReportServer">
            <summary>
            Provides a class for the report server data.
            Contains the URL to the report server instance, a valid username and password.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.ReportServer.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.ReportServer.Url">
            <summary>
            The URL of the Telerik Report Server instance
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.ReportServer.Username">
            <summary>
            A valid username that exists in Report Server registered users.
            Empty in order to use the built-in Guest account.
            Either usage requires configured server permissions for accessing the report.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.ReportServer.Password">
            <summary>
            The password associated with the username
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.ReportSourceResolver">
            <summary>
            Base report resolver
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.ReportSourceResolver.#ctor(Telerik.ReportViewer.Mvc.IReportResolver)">
            <summary>
            Constructor
            </summary>
            <param name="parent">The parent resolver.</param>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.ReportSourceResolver.CanResolve(Telerik.Reporting.ReportSource)">
            <summary>
            Determines if a <see cref="T:Telerik.Reporting.ReportSource"/> can be resolved.
            </summary>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> to be resolved.</param>
            <returns>True if the <see cref="T:Telerik.Reporting.ReportSource"/> can be resolved. Otherwise returns false.</returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.ReportSourceResolver.Resolve(Telerik.Reporting.ReportSource)">
            <summary>
            Resolves a <see cref="T:Telerik.Reporting.ReportSource"/> to string.
            </summary>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> to be resolved.</param>
            <returns>The resolved <see cref="T:Telerik.Reporting.ReportSource"/> as string.</returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.TypeReportSourceResolver">
            <summary>
            Creates a string representation from <see cref="T:Telerik.Reporting.UriReportSource"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.TypeReportSourceResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.ReportViewer.Mvc.TypeReportSourceResolver"/> class.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.TypeReportSourceResolver.#ctor(Telerik.ReportViewer.Mvc.IReportResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.ReportViewer.Mvc.TypeReportSourceResolver"/> class.
            </summary>
            <param name="parent">The fallback resolver</param>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.TypeReportSourceResolver.CanResolve(Telerik.Reporting.ReportSource)">
            <summary>
            Determines if a <see cref="T:Telerik.Reporting.ReportSource"/> can be resolved as a <see cref="T:Telerik.Reporting.TypeReportSource"/>.
            </summary>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> to be resolved.</param>
            <returns>True if the <see cref="T:Telerik.Reporting.ReportSource"/> can be resolved as <see cref="T:Telerik.Reporting.TypeReportSource"/>. 
            Otherwise returns false.</returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.TypeReportSourceResolver.Resolve(Telerik.Reporting.ReportSource)">
            <summary>
            Resolves the <see cref="T:Telerik.Reporting.ReportSource"/> as <see cref="T:Telerik.Reporting.TypeReportSource"/> to string.
            </summary>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> to be resolved.</param>
            <returns>The resolved <see cref="T:Telerik.Reporting.ReportSource"/> as string.</returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.FileReportSourceResolver">
            <summary>
            Creates an relative path to .trdx/.trdp file from <see cref="T:Telerik.Reporting.UriReportSource"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.FileReportSourceResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.ReportViewer.Mvc.FileReportSourceResolver"/> class.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.FileReportSourceResolver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.ReportViewer.Mvc.FileReportSourceResolver"/> class.
            </summary>
            <param name="basePath">Physical directory where .trdx/.trdp reports are located. 
            Used as path prefix when relative path is passed for resolving.</param>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.FileReportSourceResolver.#ctor(Telerik.ReportViewer.Mvc.IReportResolver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.ReportViewer.Mvc.FileReportSourceResolver"/> class.
            </summary>
            <param name="parent">The fallback resolver</param>
            <param name="basePath">Physical directory where .trdx/.trdp reports are located. 
            Used as path prefix when relative path is passed for resolving.</param>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.FileReportSourceResolver.CanResolve(Telerik.Reporting.ReportSource)">
            <summary>
            Determines if a <see cref="T:Telerik.Reporting.ReportSource"/> can be resolved as a <see cref="T:Telerik.Reporting.UriReportSource"/>.
            </summary>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> to be resolved.</param>
            <returns>True if the <see cref="T:Telerik.Reporting.ReportSource"/> can be resolved as <see cref="T:Telerik.Reporting.UriReportSource"/>. 
            Otherwise returns false.</returns>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.FileReportSourceResolver.Resolve(Telerik.Reporting.ReportSource)">
            <summary>
            Resolves the <see cref="T:Telerik.Reporting.ReportSource"/> as <see cref="T:Telerik.Reporting.UriReportSource"/> to string.
            </summary>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> to be resolved.</param>
            <returns>The resolved <see cref="T:Telerik.Reporting.ReportSource"/> as string.</returns>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.ScaleMode">
            <summary>
            Sets the scale mode of the viewer
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ScaleMode.FitPageWidth">
            <summary>
            The report will be zoomed in or out so that the width of the screen and the width of the report match.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ScaleMode.FitPage">
            <summary>
            The whole report will fit on the page (will zoom in or out), regardless of its width and height.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ScaleMode.Specific">
            <summary>
            Uses the scale to zoom in and out the report.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.ScaleModes">
            <summary>
            Sets the scale mode of the viewer
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ScaleModes.FIT_PAGE_WIDTH">
            <summary>
            The report will be zoomed in or out so that the width of the screen and the width of the report match.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ScaleModes.FIT_PAGE">
            <summary>
            The whole report will fit on the page (will zoom in or out), regardless of its width and height.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ScaleModes.SPECIFIC">
            <summary>
            Uses the scale to zoom in and out the report.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.SendEmail">
            <summary>
            Provides a class for the send e-mail message options.
            Contains the enabled property, the preselected rendering Format, from and to e-mail addresses.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Mvc.SendEmail.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.SendEmail.Enabled">
            <summary>
            Indicates whether to show the send e-mail button
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.SendEmail.From">
            <summary>
            A valid e-mail for the e-mail message FROM address.
            This field is required if empty the user should set it in the Send Mail Message dialog.
            The users can modify this value in the Send Mail Message dialog. 
            The SendMailMessage implementation should accept the specified FROM e-mail address.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.SendEmail.To">
            <summary>
            A valid e-mail for the e-mail message TO address.
            This field is required if empty the user should set it in the Send Mail Message dialog.
            The users can modify this value in the Send Mail Message dialog. 
            The SendMailMessage implementation should accept the specified TO e-mail address.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.SendEmail.CC">
            <summary>
            A valid e-mail for the e-mail message CC address.
            This field is optional.
            The users can modify this value in the Send Mail Message dialog. 
            The SendMailMessage implementation should accept the specified CC e-mail addresses.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.SendEmail.Subject">
            <summary>
            A string used for the MailMessage Subject value.
            This field is optional.
            The users can modify this value in the Send Mail Message dialog. 
            The SendMailMessage implementation should accept the specified e-mail subject.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.SendEmail.Body">
            <summary>
            A string used for the MailMessage Body value.
            This field is optional.
            The users can modify this value in the Send Mail Message dialog. 
            The SendMailMessage implementation should accept the specified e-mail body.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Mvc.SendEmail.Format">
            <summary>
            The preselected rendering format. 
            The users can modify this value in the Send Mail Message dialog. 
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.ViewMode">
            <summary>
            Specifies whether the viewer is in interactive or print preview mode
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ViewMode.Interactive">
            <summary>
            Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ViewMode.PrintPreview">
            <summary>
            Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Mvc.ViewModes">
            <summary>
            Specifies whether the viewer is in interactive or print preview mode
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ViewModes.INTERACTIVE">
            <summary>
            Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Mvc.ViewModes.PRINT_PREVIEW">
            <summary>
            Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap">
            <summary>
            Provides a class for the key mapping used when report viewer accessibility is enabled.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap.CONFIRM_KEY">
            <summary>
            Key code for executing report actions and applying report parameters
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap.CONTENT_AREA_KEY">
            <summary>
            Key code for navigating to report contents area, when pressed together with CTRL + ALT
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap.DOCUMENT_MAP_AREA_KEY">
            <summary>
            Key code for navigating to document map area, when pressed together with CTRL + ALT
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap.MENU_AREA_KEY">
            <summary>
            Key code for navigating to menu area, when pressed together with CTRL + ALT
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap.PARAMETERS_AREA_KEY">
            <summary>
            Key code for navigating to parameters area, when pressed together with CTRL + ALT
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.Options.AccessibilityKeyMap.Default">
            <summary>
            Returns an instance, initialized with the default key mapping
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Html5.Common.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.ExceptionMessages.NameCannotBeBlank">
            <summary>
              Looks up a localized string similar to The name of the element cannot be blank..
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.ExceptionMessages.NameCannotContainInvalidCharacters">
            <summary>
              Looks up a localized string similar to The name of the element cannot contain invalid characters..
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Html5.Common.PageMode">
            <summary>
            Specifies the page mode for the ReportViewer control.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.PageMode.ContinuousScroll">
            <summary>
            Displays large amount of report pages by appending additional pages on demand.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.PageMode.SinglePage">
            <summary>
            Displays only one report page in PageArea container
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Html5.Common.PrintMode">
            <summary>
            Specifies how the viewer should handle the print command.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.PrintMode.AutoSelect">
            <summary>
            Specifies that the viewer should automatically determine how to print: through the browser's PDF plug-in or through export to a PDF file.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.PrintMode.ForcePDFPlugin">
            <summary>
            Specifies that the viewer should always use the PDF plugin regardless of the browser's version and settings.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.PrintMode.ForcePDFFile">
            <summary>
            Specifies that the viewer should always export the report document to PDF format with the 'print' script enabled.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Html5.Common.ReportServer">
            <summary>
            Provides a class for the report server data.
            Contains the URL to the report server instance, a valid username and password.
            </summary>
        </member>
        <member name="M:Telerik.ReportViewer.Html5.Common.ReportServer.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.ReportServer.Url">
            <summary>
            The URL of the Telerik Report Server instance
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.ReportServer.Username">
            <summary>
            A valid username that exists in Report Server registered users.
            Empty in order to use the built-in Guest account.
            Either usage requires configured server permissions for accessing the report.
            </summary>
        </member>
        <member name="P:Telerik.ReportViewer.Html5.Common.ReportServer.Password">
            <summary>
            The password associated with the username. Empty when Username is not set
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Html5.Common.ScaleMode">
            <summary>
            Sets the scale mode of the viewer
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.ScaleMode.FitPageWidth">
            <summary>
            The report will be zoomed in or out so that the width of the screen and the width of the report match.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.ScaleMode.FitPage">
            <summary>
            The whole report will fit on the page (will zoom in or out), regardless of its width and height.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.ScaleMode.Specific">
            <summary>
            Uses the scale to zoom in and out the report.
            </summary>
        </member>
        <member name="T:Telerik.ReportViewer.Html5.Common.ViewMode">
            <summary>
            Specifies whether the viewer is in interactive or print preview mode
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.ViewMode.Interactive">
            <summary>
            Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
            </summary>
        </member>
        <member name="F:Telerik.ReportViewer.Html5.Common.ViewMode.PrintPreview">
            <summary>
            Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
            </summary>
        </member>
    </members>
</doc>
