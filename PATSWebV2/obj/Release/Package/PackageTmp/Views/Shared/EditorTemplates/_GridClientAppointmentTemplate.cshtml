@using Kendo.Mvc.UI
@model PATSWebV2.ViewModels.AppointmentViewModel
@Html.HiddenFor(m => m.AppointmentId)
@Html.HiddenFor(m => m.StatusID, new { id = "hdClientStatusID" })
@{
    //required in order to render validation attributes
    ViewContext.FormContext = new FormContext();
}
@functions{
    public Dictionary<string, object> generateDatePickerAttributes(
           string elementId,
           string fieldName,
           string dataBindAttribute,
           Dictionary<string, object> additionalAttributes = null)
    {

        Dictionary<string, object> datePickerAttributes = additionalAttributes != null ? new Dictionary<string, object>(additionalAttributes) : new Dictionary<string, object>();

        datePickerAttributes["id"] = elementId;
        datePickerAttributes["name"] = fieldName;
        datePickerAttributes["data-bind"] = dataBindAttribute;
        datePickerAttributes["required"] = "required";
        datePickerAttributes["style"] = "z-index: inherit; Width:130px;height:22px!important";
        return datePickerAttributes;
    }
    public Dictionary<string, object> generateDateTimePickerAttributes(
           string elementId,
           string fieldName,
           string dataBindAttribute,
           Dictionary<string, object> additionalAttributes = null)
    {

        Dictionary<string, object> datePickerAttributes = additionalAttributes != null ? new Dictionary<string, object>(additionalAttributes) : new Dictionary<string, object>();

        datePickerAttributes["id"] = elementId;
        datePickerAttributes["name"] = fieldName;
        datePickerAttributes["data-bind"] = dataBindAttribute;
        datePickerAttributes["required"] = "required";
        datePickerAttributes["style"] = "z-index: inherit; Width:110px;height:22px!important";
        return datePickerAttributes;
    }
}
<style>
    .k-popup-edit-form k-window-content k-content{
        width: 750px !important;
        margin-top:2px;
        margin-left: 10px;
        height:400px;
        /*z-index: 10000!important;
        opacity: 5.5!important;
        background-color:red;*/
    }
    .k-edit-buttons{
        width: 730px;
        /*visibility:hidden!important;*/
        /*margin-left:-10px;*/
    }

    /*.k-edit-form-container {
        width: 730px;
    }*/

    .k-dropdown-wrap k-state-default {
        height: 22px !important;
    }
    
    .k-autocomplete .k-input, .k-dropdown-wrap .k-input, .k-numeric-wrap .k-input, .k-picker-wrap .k-input, .k-selectbox .k-input, .k-textbox > input {
        height: 22px !important;
        line-height:18px;
    }

    .dropdown {
        background-color: green;
    }
    .k-checkbox-label{
        padding:0px;
    }
</style>
<script>
    $(".k-edit-buttons").css("display", "none");
</script>
@*@Html.HiddenFor(m=>m.EpisodeId)*@
<div id="ClientEventEditorWindow" style="width:730px;margin-left:10px;height:320px;" @*data-role="page"*@>
     <table style="border-bottom-style:solid;border-bottom-width:thin;width:98%;margin-top:-15px;">
        <tr>
            <td colspan="7" align="right" >
                <a class="k-button k-button-icontext k-primary k-grid-update" role="button" href="#" style="height:22px;"><span class="k-icon k-i-check"></span>Update</a>
                <a class="k-button k-button-icontext k-grid-cancel" role="button" href="#" style="height:22px;"><span class="k-icon k-i-cancel"></span>Cancel</a>
            </td>
        </tr>
        <tr><td colspan="7" style="border-bottom-style:solid;border-bottom-width:thin;height:5px;"></td></tr>
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td style="width:80px; text-align:left;" valign="top">@(Html.Label("Appt Date"))</td>
            <td width = "130px">
                <div data-container-for= "Start" class="k-edit-field" style="width:130px">
                    @(Html.Kendo().DatePickerFor(model => model.Start).DisableDates("disableDates").Events(e => e.Change("makestartsameasendday")).Format("MM/dd/yyyy")
                           .HtmlAttributes(generateDatePickerAttributes("startApptDate", "Start", "value:Start")))
                    <span data-bind="text: startTimezone"></span>
                    <span data-for="Start" class="k-invalid-msg"></span>
                </div>
            </td>
            <td style = "width:80px; text-align:left;" valign="top">@Html.Label("Start Time", new { id = "lblStartTime" })</td >
            <td width="120px">
                <div data-container-for="Start" class="k-edit-field" style="width:120px">
                    @(Html.Kendo().TimePickerFor(model => model.StartTime).Interval(15)
             .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 7, 00, 00))
            .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 18, 00, 00))
            .HtmlAttributes(generateDateTimePickerAttributes("startApptTime", "StartTime", "value:StartTime,invisible:IsAllDay")))
                </div>
            </td>
            <td style="width:80px; text-align:left;" valign="top">&nbsp;&nbsp;@Html.Label("End Time", new { id = "lblEndTime" })</td>
            <td width="120px">
                <div data-container-for="End" class="k-edit-field" style="width:120px">
                    @(Html.Kendo().TimePickerFor(model => model.EndTime).Interval(15)
                .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 7, 00, 00))
                .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 18, 00, 00))
                .HtmlAttributes(generateDateTimePickerAttributes("endApptTime", "EndTime", "value:EndTime,invisible:IsAllDay")))
                </div>
            </td>
            <td style="width:100px; text-align:left;" valign="top">
                <script>
                    $("#IsAllDay").on('click', function ()
                    {
                       if (this.checked) {
                            $("#lblEndTime").css("display", "none");
                            $("#lblStartTime").css("display", "none")

                        }
                        else {
                            $("#lblEndTime").css("display", "");
                            $("#lblStartTime").css("display", "");
                        }
                    })
                </script>
                <div class="k-editor-edit">
                    @(Html.Kendo().CheckBoxFor(model => model.IsAllDay).Name("IsAllDay").HtmlAttributes(new { id = "IsAllDay" }))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Full Day
                </div>
            </td>
        </tr>
    </table>
    <br />
    <table style="width:98%">
        <tr>
            <td style="width:60px; text-align:right;" valign="top">@Html.Label("Type")&nbsp;&nbsp;</td>
            <td with="150px">
                <div class="k-edit-field" style="width:150px">
                    @(Html.Kendo().DropDownListFor(m => m.TypeID)
                     .Name("TypeID")
                     .DataTextField("EvtTShortDescr")
                     .OptionLabel("Select Type...")
                     .HtmlAttributes(new { style = "width:150px;" })
                     .Value(Model.Title)
                     .DataValueField("ID")
                     .Filter(FilterType.Contains)
                     .Height(290)
                     .DataSource(source => source
                     .Read(read => { read.Action("GetEventTypes", "Appointment"); })) )
                </div>
            </td>
            <td style="width:60px; text-align:right;" valign="top">@Html.Label("Status")&nbsp;&nbsp;</td>
            <td width="150px">
                <div class="k-edit-field" style="width:150px;float:left;">
                    @(Html.Kendo().DropDownListFor(m => m.StatusID)
         .Name("StatusID")
         .OptionLabel("Select Status...")
         .DataTextField("Text")
         .DataValueField("Value")
         .HtmlAttributes(new { style = "width:150px;" })
         .Filter(FilterType.Contains)
         .Height(290)
         .Events(e => { e.Change("ClientStatusIDChange"); e.Select("SetClientStatus"); } )
                     .DataSource(source => source
                     .Read(read => { read.Action("GetEventStatus", "Appointment"); })))
                </div>
            </td>
            <td style="width:120px; text-align:right;" valign="top">@(Html.Label("Appt Office"))&nbsp;&nbsp;</td>
            <td width="180px">
                <div class="k-editor-field" style="width:180px">
                    @(Html.Kendo().DropDownListFor(m => m.SelectedLocationId)
                     .Name("SelectedLocationId")
                     .OptionLabel("Select Office...")
                     .DataTextField("ComplexDesc")
                     .DataValueField("ComplexID")
                     .HtmlAttributes(new { style = "width:160px;margin-top:-13px;" })
                     .Filter(FilterType.Contains)
                     .Height(290)
                     .DataSource(source => source
                     .Read(read => { read.Action("GetAllApptComplex", "Appointment"); })))
                </div>
            </td>
        </tr>
    </table>
    <table style="width:98%">
        <tr>
            <td width="80px" valign="top">@Html.LabelFor(m => m.IsCompleted)&nbsp;&nbsp;</td>
            <td width="20px" valign="top">
                <div class="k-editor-edit" style="width:20px;height:20px;">
                    @(Html.Kendo().CheckBoxFor(m => m.IsCompleted).Label(""))
                </div>
            </td>
            <td>
                @(Html.Kendo().MultiSelect()
              .Name("SelectedADAItems")
              .AutoClose(false)
              .HtmlAttributes(new { style = "width:610px" })
              .Placeholder("-- Select ADA Accommondations or Effective Communication --")
              .DataTextField("Text")
              .DataValueField("Value")
              .Value(Model.SelectedADAItems)
              .ItemTemplate("<input type='checkbox' name='cb' value='\\#:data.Value\\#' /> \\#:data.Text\\#")
              .Events(evt =>
              {
                  evt.DataBound("ADAECListDataBound"); evt.Change("ADAECListDataChange");
                  evt.Close("SetDefault"); evt.Deselect("onDeselect");
              })
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetADAECDescription", "Appointment");

                  }).ServerFiltering(true);
              }))
            </td>
        </tr>
        <tr>
            <td colspan="2"></td>
            <td width="620px">
                @Html.TextAreaFor(m => m.Description, new { @class = "textareaforcasemanngement", placeholder = "Purpose ...", @style = "maxlength:1000;" })
            </td>
        </tr>
    </table>
    <br />
    <table style="border-bottom-style:solid;border-bottom-width:thin;width:98%">
        <tr>
            <td style="width:60px; text-align:right;">@Html.LabelFor(m => m.SelectedStaffNames)&nbsp;&nbsp;</td>
            <td width="620px" colspan="2">
                <div class="k-edit-field" data-container-for="SelectedStaffs" style="float:left;width:460px;padding:0">
                    @(Html.Kendo().MultiSelectFor(m => m.SelectedStaffs)
                .Name("ClientSelectedStaffs")
                .DataValueField("StaffId")
                .DataTextField("StaffName")
                .ValuePrimitive(true)
                .Placeholder("No Staff Selected ...")
                .HtmlAttributes(new { style = "width:460px;" })
                .Value(Model.SelectedStaffs)
                .Events(ev => { ev.Open("OpenStatus"); ev.Change("ChangeClientStaff"); })
                .DataSource(source =>
                    source.Read(r => r.Action("GetSelectedStaffs", "Appointment").Data("getClientStaffAppointmentId()")).Events(events => { events.RequestEnd("RefreshClientList"); })))
                </div>
                @*<div class="k-edit-field" data-container-for="ClientStaffs" style="float:right;width:60px;padding:0;background-color: green;">
                    <button class="btn btn-default dropdown-toggle" type="button" id="ClientStaffs" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="width:140px;float:right;padding:0px;margin-top:-2px;">
                        <b style="color: green;">Add Staff</b>*@

                        @(Html.Kendo().DropDownList()
            .Name("ClientStaffs")
            .OptionLabel("Add Staff")
            .DataValueField("StaffId")
            .DataTextField("StaffName")
            .MinLength(1)
            .HtmlAttributes(new { style = "text-align:left;width:160px;" })
            .Filter(FilterType.Contains)
            .Height(290)
            .Events(e => { e.Change("AddToClientSelectedStaffs"); e.Close("DDLOnCloseIgnoreFilter"); })
                    .DataSource(source =>
                    {
                        source.Read(read => read.Action("GetApptStaffs", "Appointment")).ServerFiltering(true);
                    })
                        )
                    @*</button>*@
                @*</div>*@
            </td>
        </tr>
        <tr><td colspan="2" height="15px;"></td></tr>
    </table>
    <table style="width:98%">
        <tr>
            <td style="width:80px; text-align:left;">@Html.Label("Availibility", new { style="margin-top:10px;" })&nbsp;&nbsp;</td>
            <td width="150px">
                <div class="k-edit-field" data-container-for="Availability" style="float:left;">
                    @(Html.Kendo().DropDownList()
                    .Name("Availability")
                    .OptionLabel("Available time ...")
                    .DataValueField("Value")
                    .DataTextField("Text")
                    .Enable(false)
                    .HtmlAttributes(new { style = "width:150px;font-size:12px;margin-top:5px;" })
                    .Height(290)
                    .Events(e => { e.Change("ChangeSelectedTime"); })
                    .AutoBind(false)
                    )
                </div>
            </td>
            <td colspan="3">
                <button type="button" id="btnCheckAvailability" class="k-button" onclick="CheckClientAvailability(this)">Get</button>
            </td>
            @*<td colspan="2">&nbsp;&nbsp;@Html.Label("Attend:")</td>*@
            <td>
                <fieldset class="fieldset1" style="margin-top:0px;height:25px;width:340px;">
                    <legend style="font-size:small;width:50px;line-height:10px;height:12px;">Attend:</legend>
                    <div style="padding:5px;margin-top:-10px">
                        <input id='absent' type='checkbox' onclick='selectClientStatus(this)' style='margin-left:10px' class="chkstatus" />&nbsp;Absent
                        <input id='present' type='checkbox' onclick='selectClientStatus(this)' style='margin-left:5px' class="chkstatus" />&nbsp;Present
                        <input id='canceled' type='checkbox' onclick='selectClientStatus(this)' style='margin-left:5px' class="chkstatus" />&nbsp;Canceled
                        <input id='excused' type='checkbox' onclick='selectClientStatus(this)' style='margin-left:5px' class="chkstatus" />&nbsp;Excused&nbsp;&nbsp;&nbsp;&nbsp;
                    </div>
                </fieldset>
            </td>
            <td>
                <div class="k-editor-edit">
                    @(Html.Kendo().CheckBoxFor(model => model.AutoPrint).Name("AutoPrint").Label("").HtmlAttributes(new { id = "AutoPrint" }))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print
                </div>
            </td>
        </tr>
    </table>
</div>
@{
    ViewContext.FormContext = null;
}


