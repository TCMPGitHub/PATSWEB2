@using Kendo.Mvc.UI
@model PATSWebV2.ViewModels.Evaluation.EvaluationViewModel
@using (Ajax.BeginForm("SaveEvaluation", "Client",
                        new { Command = string.Empty },
                        new AjaxOptions
                        {
                            HttpMethod = "Post",
                            UpdateTargetId = "evaluationmain",
                            InsertionMode = InsertionMode.Replace,
                            OnSuccess = "OnAjaxSuccess"
                        }, new
                        {
                            @id = "evaluationform",
                            @name = "Evaluation",
                            @style = "min-height: 500px;overflow:hidden",
                            @class = "color-default"
                        }))
{
    <style>
        .k-icon k-i-calendar {
            margin-top: 5px;
        }
    </style>
    @*<div id="appointmentdiv" class="color-default">*@
        @Html.HiddenFor(m => m.EpisodeId, new { @id = "hdEposideId" })
        @Html.HiddenFor(m => m.Evaluations[0].EvaluationGUID, new { @id = "hdGUID" })
        @Html.HiddenFor(m => m.EvaluationID, new { @id = "hdEvaluationID" })
        @Html.HiddenFor(m => m.SelectedEvaluationDate, new { @id = "hdEvaluationDate" })
        @Html.HiddenFor(m => m.CanEdit, new { @id = "hdEvlEditable" })
        @Html.HiddenFor(m => m.SelectedStaffId, new { @id = "hdSelectedStaffId" })
        @Html.HiddenFor(m => m.LoginStaffId, new { @id = "hdLoginStaffId" })
        @Html.HiddenFor(m => m.Evaluations[0].IsLastEvlSet, new { @id = "hdIsLastEvlSet" })
        @Html.HiddenFor(m => m.Evaluations[0].IsInitial, new { @id = "hdIsInitial" })
@Html.ValidationSummary(false);
    <table id="smallertable" style="background-color:transparent;width:100%; ">
        <tr class="color-default" style="height:18px!important;">
            <td width="240px" height="18px">&nbsp;&nbsp;&nbsp;
                @Html.Label("PREVIOUS EVALUATIONS:", new { @style = "margin-top:5px;" })
            </td>
            <td width="160px" height="18px">
                <script>
                    $('#evaluationform').on('dblclick', '.textareaforcasemanngement', function (e) {
                            var edit = (($("#AllEvluationDates").data("kendoDropDownList").text().indexOf("*") > 0) || ($("#hdIsInitial").val() == "True" ? true : false))
                                       && EditableEpisode($("#hdEvlEditable").val());
                            TextarePopup(e, edit, "color-default");
                        });
                        $('#evaluationform').on('keyup', '.textareaforcasemanngement', function (e) {
                            if (e.keyCode == '90' && e.ctrlKey) {
                                $(this).trigger('dblclick');
                            }
                        })

                        function PopulatePreviousSet(e) {
                            if (this.select() == 0)
                                return false;
                            EvaluationDateChange();
                            var object = this.dataItem(this.select());
                            var id = (object == undefined || object.EvaluationID == "") ? 0 : object.EvaluationID;
                            var editable = ($("#AllEvluationDates").data("kendoDropDownList").text().indexOf("*") > 0) && EditableEpisode($("#hdEvlEditable").val());
                            $.ajax({
                                url: "@Url.Action("GetEvaluationItems", "Client")",
                                data: { EpisodeID: $("#hdEposideId").val(), EvaluationID: id },
                                cache: false,
                                type: "POST",
                                dataType: "html",

                                success: function (data, textStatus, XMLHttpRequest) {
                                    $("#evaluationform").replaceWith(data); // HTML DOM replace

                                    $("#evaluationform :input").each(function () {
                                        if (this.className.indexOf("textarea") > -1) {
                                            $(this).prop('readonly', !editable);
                                        }
                                    })
                                    return true;
                                }
                            })
                            return false;
                        }
                        function EvaluationDateChange() {
                            $("#hdEvaluationDate").val($("#evlDate").val());
                        }
                        function onDataBound(e) {
                            if (this.selectedIndex == 0) {
                                this.select(1);
                                this.trigger('change');
                            }
                        }
                </script>
                @(Html.Kendo().DropDownListFor(m => m.Evaluations[0].ID)
                .Name("AllEvluationDates")
                .OptionLabel("Select Eval. Date...")
                .DataTextField("EvaluationDate")
                .DataValueField("EvaluationID")
                .HtmlAttributes(new { style = "width:150px;text-align:left;", @class = "neverDisable" })
                .Filter(FilterType.Contains)
                .Height(290)
                .Events(e => { e.DataBound("onDataBound"); e.Change("PopulatePreviousSet"); })
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetEvlDateList", "Client", new { EpisodeID = Model.EpisodeId }));
                }))
            </td>
            <td colspan="4" height="18px">
                @(Html.Kendo().CheckBoxFor(m => m.Evaluations[0].IsInitial).HtmlAttributes(new { @id = "chkInitial", @style = "margin-top:5px;", @class = "evalInitial" })
                   .Label("CREATE NEW EVALUATION"))
            </td>
        </tr>
        <tr class="color-default">
            <td width="180px">
                &nbsp;&nbsp;&nbsp;&nbsp;<scan style="color:red">*</scan>
                @Html.Label("EVALUATION DATE:") &nbsp;&nbsp;
            </td>
            <td>
                <div>
                    @(Html.Kendo().DatePickerFor(m => m.SelectedEvaluationDate)
                       .Name("evlDate")
                       .Format("MM/dd/yyyy").Value(Model.SelectedEvaluationDate)
                       .Events(e => e.Change("EvaluationDateChange")).Enable(false)
                       .HtmlAttributes(new { @style = "width:140px;" }))
                </div>
            </td>
            <td width="330px">
                <script>
                    function DataChanged(e) {
                        var object = this.dataItem(this.select());
                        if (object == undefined || object == null || object.StaffId < 0)
                            return;
                    
                        if (object.StaffId.toString() == $("#hdLoginStaffId").val()
                            && $("#hdSelectedStaffId").val() != $("#hdLoginStaffId").val()) {
                            $(".evalInitial").prop("disabled", false);
                            $(".evalInitial").prop("checked");
                            $(".evalInitial").trigger('click');
                            $("#hdEvlEditable").val("True");
                            DisableAllInputFields("#evaluationform :input", $("#hdEvlEditable").val());
                            EVAButtonDisable(true);
                        }
                                               
                        $("#hdSelectedStaffId").val(object.StaffId);
                    }
                </script>
                &nbsp;&nbsp;&nbsp;&nbsp;<scan style="color:red">*</scan>
                @Html.Label("STAFF:") &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                @(Html.Kendo().DropDownListFor(m => m.Evaluations[0].EvaluatedBy)
                .Name("AllEvluationStaffIDs")
                .OptionLabel("Select Staff ...")
                .DataTextField("StaffName")
                .DataValueField("StaffId")
                .HtmlAttributes(new { style = "width:200px;text-align:left;", @class = "neverDisable" })
                .Filter(FilterType.Contains)
                .Height(290)
                .Value(Model.SelectedStaffId.ToString())
                .Events(e => { e.Change("DataChanged"); })
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetAllEvaluationStaffs", "Client")).ServerFiltering(false);
                }))
            </td>
            <td width="20px">
                @if (Model.Evaluations[0].ID > 0)
                {
                    <a href="javascript:printPATSPDF(@Model.EpisodeId, '@Model.EvaluationID', 'Client Evaluation','color-default')">
                        <img style="width:22px; height:22px;float:left;margin-top:10px;" title="PRINT CLIENT EVALUATION" src='@Url.Content("~/Content/images/printer-icon.png")' />
                    </a>
                }
            </td>
            <td colspan="2"></td>
        </tr>
    </table><br/>
    <table id="mmatable" style="width:99.7%;">         
        <tr style="background-color:dimgray!important;text-align:center;color:white;">
            <th style="display:none;"></th>
            <th style="font-size:16px!important;font-weight:bold;width:20%">Evaluation Area</th>
            <th style="font-size:16px!important;font-weight:bold;">Narrative</th>
        </tr>
            @for (int i = 0; i < Model.Evaluations.Count; i++)
            {
                @Html.HiddenFor(m => m.Evaluations[i].EvaluationItemID)
                @Html.HiddenFor(m => m.Evaluations[i].EvaluationGUID)
                <tr>
                    <td style="display:none;"> @Html.EditorFor(x => x.Evaluations[i].EvaluationItemID) </td>
                    <td> @Html.DisplayFor(x => x.Evaluations[i].EvaluationItemDesc) </td>
                    <td style="width:75%">
                        @Html.TextAreaFor(m => m.Evaluations[i].EvaluationItemNote, new
                        {
                            @id = "txt" + @i,
                            @refID = @i,
                            @class = "textareaforcasemanngement",
                            @placeholder = Model.Evaluations[i].EvaluationItemDesc,
                            @style = "overflow-wrap: normal;width:99.5%;border-style:0.5px, solid;",
                            @maxlength = "4000"
                        })
                    </td>
                </tr>
            }
     </table>
     <br/>
        <div class="padded aligncenter form-actions" id="presmeddiv" style="height:auto;margin-top:10px;">
            @*@if (Model.CanEdit)
            {*@
                <button type="submit" class="btn btn-group-lg default-button" id="evaSave">Submit</button>
            @*}*@
            &nbsp; &nbsp;
            <button type="button" class="btn btn-group-lg default-button" id="evaCancel">Cancel</button>&nbsp;&nbsp;
            <button type="button" class="btn btn-group-lg default-button" id="evaReset">Reset</button>
        </div>
        <br />
}

<script type="text/javascript">
    function EVAButtonDisable(disabled) {
        $("#evaSave").prop('disabled', disabled);
        $("#evaCancel").prop('disabled', disabled);
        $("#evaReset").prop('disabled', disabled);
    }
    $(function () {
        var initdata = $('#evaluationform').serialize();
        $('#evaluationform').submit(function (e) {
            e.preventDefault();
            if ($("#AllEvluationStaffIDs").val() == "") {
                if ($("#AllEvluationStaffIDs").data("kendoDropDownList").value() == "") {
                    alert("Must select a staff.");
                    return false;
                }
            }
            
            var nowdata = $('#evaluationform').serialize();
            if (initdata === nowdata) {
                NotifyMessage();
                e.stopPropagation();
                return false;
            }
            if (confirm("Are you sure you want to save this Evaluation?") == false) {
                e.stopPropagation();
                return false;
            }
            initdata = nowdata;
            EVAButtonDisable(true);
            postFormAndReplaceDivHtmlPats($('#evaluationform'));
            var tabstrip = $("#evlTabstrip").data("kendoTabStrip");
            var tab = tabstrip.select();
            tabstrip.reload(tab);
            return true;
        });
        $('#evaluationform :input').change(function (e) {
            var nowdata = $('#evaluationform').serialize();
            if (initdata === nowdata) {
                EVAButtonDisable(true);
            }
            else {
                EVAButtonDisable(false);
            }
        });
        $(".evalInitial").click(function (e) {
            if (this.checked) {
                $("#evaluationform :input").each(function () {
                    if (this.type == "text" || this.type == "textarea" || this.type == "number")
                        $(this).val('');
                });
                $("#hdIsInitial").val("True");
                var dddlist = $("#AllEvluationDates").data("kendoDropDownList");
                dddlist.select(0);
                var ddslist = $("#AllEvluationStaffIDs").data("kendoDropDownList");
                ddslist.value($("#hdLoginStaffId").val());
                $("#evlDate").val(kendo.toString(new Date(), 'MM/dd/yyyy'))
            }
        });
    });
    DisableAllInputFields("#evaluationform :input", $("#hdEvlEditable").val());
    EVAButtonDisable(true);
   
  $("#evaCancel").click(function () {
      document.getElementById("evaluationform").reset();
      EVAButtonDisable(true);
  })

  $("#evaReset").click(function () {
      $("#evaluationform :input").each(function () {
          if (this.type == "text" || this.type == "textarea" || this.type == "number")
              $(this).val('');
      })
      var dropdownlist = $("#AllEvluationDates").data("kendoDropDownList");
      dropdownlist.select(0);
      var ddslist = $("#AllEvluationStaffIDs").data("kendoDropDownList");
      ddslist.value($("#hdLoginStaffId").val());
      $("#evlDate").val(kendo.toString(new Date(), 'MM/dd/yyyy'))
  });

</script>

