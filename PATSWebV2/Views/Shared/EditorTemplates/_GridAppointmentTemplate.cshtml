@using Kendo.Mvc.UI
@model PATSWebV2.ViewModels.AppointmentViewModel
@Html.HiddenFor(m => m.AppointmentId)
@Html.HiddenFor(m => m.StatusID, new { id = "hdStatusID" })
@{
    //required in order to render validation attributes
    ViewContext.FormContext = new FormContext();
}
@functions{
    public Dictionary<string, object> generateDatePickerAttributes(
           string elementId,
           string fieldName,
           string dataBindAttribute,
           Dictionary<string, object> additionalAttributes = null)
    {

        Dictionary<string, object> datePickerAttributes = additionalAttributes != null ? new Dictionary<string, object>(additionalAttributes) : new Dictionary<string, object>();

        datePickerAttributes["id"] = elementId;
        datePickerAttributes["name"] = fieldName;
        datePickerAttributes["data-bind"] = dataBindAttribute;
        datePickerAttributes["required"] = "required";
        datePickerAttributes["style"] = "z-index: inherit; Width:130px;height:22px!important";
        return datePickerAttributes;
    }
    public Dictionary<string, object> generateDateTimePickerAttributes(
           string elementId,
           string fieldName,
           string dataBindAttribute,
           Dictionary<string, object> additionalAttributes = null)
    {

        Dictionary<string, object> datePickerAttributes = additionalAttributes != null ? new Dictionary<string, object>(additionalAttributes) : new Dictionary<string, object>();

        datePickerAttributes["id"] = elementId;
        datePickerAttributes["name"] = fieldName;
        datePickerAttributes["data-bind"] = dataBindAttribute;
        datePickerAttributes["required"] = "required";
        datePickerAttributes["style"] = "z-index: inherit; Width:110px;height:22px!important";
        return datePickerAttributes;
    }
}
<script src="~/Scripts/PATS/PATSShared.js"></script>
<style>
    .k-popup-edit-form k-window-content k-content {
        width: 750px !important;
        margin-left: 10px;
        margin-top:2px;
        height:350px;
    }
    .k-edit-buttons k-state-default{
        width: 730px;
        visibility:hidden!important;
    }
    .k-edit-form-container {
        width: 730px;
    }
    
    .k-dropdown-wrap k-state-default {
        height: 22px !important;
    }
    .k-i-arrow-60-down{
         margin-top:2px!important;
     }
    .k-autocomplete .k-input, .k-dropdown-wrap .k-input, .k-numeric-wrap .k-input, .k-picker-wrap .k-input, .k-selectbox .k-input, .k-textbox > input {
        height: 22px !important;
        line-height:18px;
        min-height:18px;
    }
    .k-checkbox-label{
        padding:0px;
    }
     .k-edit-buttons {
        display: none;
    }
</style>
@*<script>
    $(".k-edit-buttons").css("display", "none");
</script>*@
<div id="ClientEventEditorWindow" class="k-edit-form-container" style="width:730px;height:350px;margin-left:10px;" data-role="page">
    <table style="border-bottom-style:solid;border-bottom-width:thin;margin-top:-15px;width:99%;">
        <tr style="height:18px!important;">
            <td colspan="7" align="right">
                <a class="k-button k-button-icontext k-primary k-grid-update" role="button" href="#"><span class="k-icon k-i-check"></span>Update</a>
                <a class="k-button k-button-icontext k-grid-cancel" role="button" href="#"><span class="k-icon k-i-cancel"></span>Cancel</a>
            </td>
        </tr>
        <tr><td colspan="7" style="border-bottom-style:solid;border-bottom-width:thin;height:1px;"></td></tr>
        <tr><td style="width:80px; text-align:left;height:22px;">Appt. Date</td>
            <td width="140px">
                <div data-container-for="Start" class="k-edit-field" style="width:130px;margin-top:8px;float:left;">
                    @(Html.Kendo().DatePickerFor(model => model.Start).DisableDates("disableDates").Events(e => e.Change("makestartsameasendday")).Format("MM/dd/yyyy")
                       .HtmlAttributes(generateDatePickerAttributes("startApptDate", "Start", "value:Start")))
                    <span data-bind="text: startTimezone"></span>
                    <span data-for="Start" class="k-invalid-msg"></span>
                </div>
            </td>
            <td style="width:70px; text-align:left;">@Html.Label("Start Time", new { id = "lblStartTime", style = "margin-top:5px;" })</td>
            <td width="120px">
                <div data-container-for="Start" class="k-edit-field" style="width:110px;margin-top:8px;float:left;">
                    @(Html.Kendo().TimePickerFor(model => model.StartTime).Interval(15)
         .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 7, 00, 00))
        .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 18, 00, 00))
        .HtmlAttributes(generateDateTimePickerAttributes("startApptTime", "StartTime", "value:StartTime,invisible:IsAllDay")))
                </div>
            </td>
            <td style="width:70px; text-align:left;">@Html.Label("End Time", new { id = "lblEndTime", style = "margin-top:5px;" })</td>
            <td width="120px">
                <div data-container-for="End" class="k-edit-field" style="width:110px;margin-top:8px;float:left;">
                    @(Html.Kendo().TimePickerFor(model => model.EndTime).Interval(15)
            .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 7, 00, 00))
            .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 18, 00, 00))
            .HtmlAttributes(generateDateTimePickerAttributes("endApptTime", "EndTime", "value:EndTime,invisible:IsAllDay")))
                </div>
            </td>
            <td style="width:100px; text-align:left;" valign="middle">
                <div style="height:20px; padding:0px;">
                    @(Html.Kendo().CheckBoxFor(model => model.IsAllDay).Name("IsAllDay").HtmlAttributes(new { id = "IsAllDay" }))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Full Day
                </div>
            </td>
        </tr>
    </table>
    <table style="width:99%;">
        <tr><td colspan="7" style="height:2px;"></td></tr>
        <tr>
            <td style="width:80px; text-align:right;"  valign="middle">@Html.Label("Type")&nbsp;&nbsp;</td>
            <td with="150px">
                <div class="k-edit-field" style="width:150px;float:left;margin-top:5px;">
                    @(Html.Kendo().DropDownListFor(m => m.TypeID)
                     .Name("TypeID")
                     .DataTextField("EvtTShortDescr")
                     .HtmlAttributes(new { style = "width:150px;" })
                     .Value(Model.Title)
                     .DataValueField("ID")
                     .Filter(FilterType.Contains)
                     .Height(290)
                     .DataSource(source => source
                     .Read(read => { read.Action("GetEventTypes", "Appointment"); })) )
                </div>
            </td>
            <td style="width:60px; text-align:right;"  valign="middle">@Html.Label("Status")&nbsp;&nbsp;</td>
            <td width="150px">
                <div class="k-edit-field" style="width:150px;margin-top:5px;">
                    @(Html.Kendo().DropDownListFor(m => m.StatusID)
                 .Name("StatusID")
                 .DataTextField("Text")
                 .DataValueField("Value")
                 .HtmlAttributes(new { style = "width:150px;" })
                 .Filter(FilterType.Contains)
                 .Height(290)
                 .Events(e => { e.Change("ClientStatusChange"); e.Select("SetClientsStatus"); })
                 .DataSource(source => source
                 .Read(read => { read.Action("GetEventStatus", "Appointment"); })))
                </div>
            </td>
            <td style="width:100px; text-align:right;"  valign="middle">Appt. Office&nbsp;&nbsp;</td>
            <td width="150px">
                <div class="k-editor-field" style="width:150px">
                    @(Html.Kendo().DropDownListFor(m => m.SelectedLocationId)
                 .Name("SelectedLocationId")
                 .OptionLabel("Select Office...")
                 .DataTextField("ComplexDesc")
                 .DataValueField("ComplexID")
                 .HtmlAttributes(new { style = "width:150px;" })
                 .Filter(FilterType.Contains)
                 .Height(290)
                 .DataSource(source => source
                 .Read(read => { read.Action("GetAllApptComplex", "Appointment");
                 })))
                </div>
            </td>
        </tr>
    </table>
    <table style="width:99%;">
        <tr>
            <td width="60px" valign="top">@Html.LabelFor(m => m.IsCompleted)</td>
            <td width="20px" valign="top">
                <div class="k-editor-edit" style="width:20px;height:20px;">
                    @(Html.Kendo().CheckBoxFor(m => m.IsCompleted).Label(""))
                </div>
            </td>
            <td>
                @(Html.Kendo().MultiSelect()
              .Name("SelectedADAItems")
              .AutoClose(false)
              .HtmlAttributes(new { style = "width:620px" })
              .Placeholder("-- Select ADA Accommondations or Effective Communication --")
              .DataTextField("Text")
              .DataValueField("Value")
              .Value(Model.SelectedADAItems)
              .ItemTemplate("<input type='checkbox' name='cb' value='\\#:data.Value\\#' /> \\#:data.Text\\#")
              .Events(evt =>
              {
                  evt.DataBound("ADAECDataBound"); evt.DataBound("ADAECDataChange");
                  evt.Close("SetDefault"); evt.Deselect("onDeselect");
              })
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetADAECDescription", "Appointment");

                  }).ServerFiltering(false);
              }))
            </td>
        </tr>
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td colspan="2"></td>
            <td width="570px">
                @Html.TextAreaFor(m => m.Description, new { @class = "textareaforcasemanngement", placeholder = "Purpose ...", @maxLength = "1000" })
            </td>
        </tr>
    </table>
    <table style="border-bottom-style:solid;border-bottom-width:thin;width:99%;">
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td style="width:80px; text-align:left;" valign="top">
                <div class="k-editor-label">
                    &nbsp;&nbsp;@Html.Label("Client")&nbsp;&nbsp;
                </div>
            </td>
            <td width="640px" colspan="2">
                <div class="k-edit-field" data-container-for="SelectedClients" style="float:left;width:420px;padding:0">
                    @(Html.Kendo().MultiSelectFor(m => m.SelectedClients)
.Name("SelectedClients")
.DataValueField("EpisodeID")
.DataTextField("ClientName")
.ValuePrimitive(true)
.Placeholder("No Client Selected ...")
.HtmlAttributes(new { style = "width:420px;font-size:12px!important;" })
.Value(Model.SelectedClients)
.TagTemplate("#:data.ClientName#<input id='absent#:data.EpisodeID#' type = 'checkbox' onclick='selectColumn(this, #:data.EpisodeID#);'  style='margin-left:20px' class='chkattend' />Absent" +
"<input id = 'present#:data.EpisodeID#' type = 'checkbox' onclick = 'selectColumn(this, #:data.EpisodeID#);'  style = 'margin-left:2px' class='chkattend' />Present" +
"<input id = 'canceled#:data.EpisodeID#' type = 'checkbox' onclick = 'selectColumn(this, #:data.EpisodeID#);'  style = 'margin-left:2px' class='chkattend' />Canceled" +
"<input id = 'excused#:data.EpisodeID#' type = 'checkbox' onclick = 'selectColumn(this, #:data.EpisodeID#);'  style = 'margin-left:2px' class='chkattend' />Excused")
.Events(e => { e.Open("OpenStatus"); e.DataBound("SetCheckboxValue"); e.Deselect("ResetCheckboxSet"); })
                .DataSource(source =>
                    source.Read(r => r.Action("GetSelectedEpisodes", "Appointment").Data("getAppointmentId()"))))
               </div>&nbsp;&nbsp;

                <div class="k-edit-field" data-container-for="Clients" style="float:right;padding:0;width:180px">
                    @(Html.Kendo().DropDownList()
            .Name("Clients")
            .OptionLabel("Add Client")
            .DataValueField("EpisodeID")
            .DataTextField("ClientName")
            .HtmlAttributes(new { style = "text-align:left;width:180px;font-size:12px!important;" })
            .Filter(FilterType.Contains)
            .Height(290)
                    .Events(e => { e.Change("AddToSelectedClients"); e.Close("DDLOnCloseIgnoreFilter"); })
                    .DataSource(source =>
                         source.Read(read => read.Action("GetEpisodeList", "Appointment")).ServerFiltering(true)
                    ))

                </div>
            </td>
        </tr>
        <tr><td colspan="7" style="height:2px;"></td></tr>
        <tr>
            <td style="width:80px; text-align:left;" valign="top">
                <div class="k-editor-label">
                    &nbsp;&nbsp;&nbsp;&nbsp;@Html.Label("Staff")&nbsp;&nbsp;
                </div>
            </td>
            <td width="640px" colspan="2">
                <div class="k-edit-field" data-container-for="SelectedStaffs" style="float:left;width:420px;padding:0;">
                    @*<div class="k-edit-field" data-container-for="SelectedStaffs" style="float:left;width:440px;padding:0">*@
                    @(Html.Kendo().MultiSelectFor(m => m.SelectedStaffs)
                .Name("SelectedStaffs")
                .DataValueField("StaffId")
                .DataTextField("StaffName")
                .ValuePrimitive(true)
                .Placeholder("No Staff Selected ...")
                .HtmlAttributes(new { style = "width:420px;font-size:12px!important;" })
                .Value(Model.SelectedStaffs)
                .Events(e => e.Change("ChangeStaff"))
                .DataSource(source =>
                    source.Read(r => r.Action("GetSelectedStaffs", "Appointment").Data("getStaffAppointmentId()")).Events(events => { events.RequestEnd("RefreshGridList"); }))   )
                </div>&nbsp;&nbsp;
                <div class="k-edit-field" data-container-for="ClientStaffs" style="float:right;width:180px;padding:0;">
                    @(Html.Kendo().DropDownList()
            .Name("ClientStaffs")
            .OptionLabel("Add Staff")
            .DataValueField("StaffId")
            .DataTextField("StaffName")
            .HtmlAttributes(new { style = "text-align:left;width:180px;font-size:12px!important;" })
            .Filter(FilterType.Contains)
            .Height(290)
            .Events(e => { e.Change("AddToSelectedStaffs"); e.Close("DDLOnCloseIgnoreFilter"); })
                    .DataSource(source =>
                    {
                        source.Read(read => read.Action("GetApptStaffs", "Appointment")).ServerFiltering(true);
                    })
                    )
                </div>
            </td>
        </tr>
        <tr><td colspan="7" style="height:5px;"></td></tr>
    </table>
    <table>
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td style="width:100px; text-align:right;" valign="top">@Html.Label("Availibility")&nbsp;&nbsp;</td>
            <td width="200px">
                <div class="k-edit-field" data-container-for="Availability" style="float:left;">
                    @(Html.Kendo().DropDownList()
                    .Name("Availability")
                    .OptionLabel("Available time ...")
                    .DataValueField("Value")
                    .DataTextField("Text")
                    .Enable(false)
                    .HtmlAttributes(new { style = "width:200px;;" })
                    .Height(290)
                    .Events(e => { e.Change("ChangeSelectedTime"); e.Select("ChangeSelectedTime"); })
                    .AutoBind(false)
                    )
                </div>
            </td>
            <td colspan="4">&nbsp;&nbsp;
                <button type="button" id="btnCheckAvailability" class="k-button" onclick="CheckAvailability(this)" style="margin-top:-5px;">Get Availability</button>
                &nbsp;&nbsp;</td>
            <td colspan="2">
                <div class="k-editor-edit">&nbsp;&nbsp;&nbsp;&nbsp;
                    @(Html.Kendo().CheckBoxFor(model => model.AutoPrint).Name("AutoPrint").HtmlAttributes(new { id = "AutoPrint" }))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print
                </div>
            </td>
        </tr>
    </table>
</div>
@{
    ViewContext.FormContext = null;
}


