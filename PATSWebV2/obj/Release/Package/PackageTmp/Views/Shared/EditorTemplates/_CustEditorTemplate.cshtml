@using Kendo.Mvc.UI;
@model PATSWebV2.ViewModels.AppointmentViewModel
@Html.HiddenFor(m => m.AppointmentId)
@Html.HiddenFor(m => m.StatusID, new { id = "hdStatusID" })
@*@{
    //required in order to render validation attributes
    ViewContext.FormContext = new FormContext();
}*@
@functions{
    public Dictionary<string, object> generateDatePickerAttributes(
           string elementId,
           string fieldName,
           string dataBindAttribute,
           Dictionary<string, object> additionalAttributes = null)
    {

        Dictionary<string, object> datePickerAttributes = additionalAttributes != null ? new Dictionary<string, object>(additionalAttributes) : new Dictionary<string, object>();

        datePickerAttributes["id"] = elementId;
        datePickerAttributes["name"] = fieldName;
        datePickerAttributes["data-bind"] = dataBindAttribute;
        datePickerAttributes["style"] = "z-index:inherit;height:22px!important;width:130px;";
        datePickerAttributes["required"] = "required";
        return datePickerAttributes;
    }
    public Dictionary<string, object> generateDateTimePickerAttributes(
           string elementId,
           string fieldName,
           string dataBindAttribute,
           Dictionary<string, object> additionalAttributes = null)
    {

        Dictionary<string, object> datePickerAttributes = additionalAttributes != null ? new Dictionary<string, object>(additionalAttributes) : new Dictionary<string, object>();

        datePickerAttributes["id"] = elementId;
        datePickerAttributes["name"] = fieldName;
        datePickerAttributes["data-bind"] = dataBindAttribute;
        datePickerAttributes["style"] = "z-index:inherit;height:22px!important;width:110px;";
        datePickerAttributes["required"] = "required";
        return datePickerAttributes;
    }
}
<style>
    .k-scheduler-edit-form {
        width: 760px !important;
        margin-left: 10px;
    }
    .k-i-arrow-60-down{
         margin-top:1px!important;
     }
    .k-scheduler-edit-form .k-edit-buttons {
        width: 720px;
    }
    .k-button{
        height:25px!important;
    }
    .k-autocomplete .k-input, .k-dropdown-wrap .k-input, .k-numeric-wrap .k-input, .k-picker-wrap .k-input, .k-selectbox .k-input, .k-textbox > input {
        height: 22px !important;
        line-height:18px;
        min-height:18px;
    }
    .k-edit-buttons {
        display: none;
    }
    .k-checkbox-label{
        padding:0px;
    }
    /*.k-window-actions{
        display: none;
    }*/
</style>
<div id="EventEditorWindow" class="k-popup-edit-form k-scheduler-edit-form" data-role="page" style="height:340px;margin-top:-10px;">
    <table style="border-bottom-style:solid;border-bottom-width:thin;width:99%;">
        <tr style="height:20px!important;">
            <td colspan="9">
                <Button type="button" class="k-button" onclick="CancelScheduler(this)" style="float:right;"><span class="k-icon k-i-cancel"></span>Cancel</Button>
                <Button type="button" class="k-button k-primary" onclick="UpdateScheduler()" style="float:right;"><span class="k-icon k-i-check"></span>Update</Button>
            </td>
                   </tr>
        <tr><td colspan="10" style="border-bottom-style:solid;border-bottom-width:thin;height:2px!important;"></td></tr>
        <tr>
            <td style="width:80px; text-align:left;height:22px;">Appt. Date</td>
            <td width="140px">
                <div data-container-for="Start" class="k-edit-field" style="width:130px;margin-top:8px;float:left;">
                    @(Html.Kendo().DatePickerFor(model => model.Start).DisableDates("disableDates").Events(e => e.Change("makestartsameasendday")).Format("MM/dd/yyyy")
                           .HtmlAttributes(generateDatePickerAttributes("startApptDate", "Start", "value:start")))
                    <span data-bind="text: startTimezone"></span>
                    <span data-for="Start" class="k-invalid-msg"></span>
                </div>
            </td>
            <td style="width:80px; text-align:left;">@Html.Label("Start Time", new { id = "lblStartTime", style = "margin-top:5px;" })</td>
            <td width="120px">
                <div data-container-for="Start" class="k-edit-field" style="width:110px;margin-top:8px;float:left;">
                    @(Html.Kendo().TimePickerFor(model => model.StartTime).Interval(15)
             .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 7, 00, 00))
            .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 18, 00, 00))
            .HtmlAttributes(generateDateTimePickerAttributes("startApptTime", "StartTime", "value:StartTime,invisible:isAllDay")))
                </div>
            </td>
            <td style="width:70px; text-align:left;">@Html.Label("End Time", new { id = "lblEndTime", style = "margin-top:5px;" })</td>
            <td width="120px">
                <div data-container-for="End" class="k-edit-field" style="width:120px;margin-top:8px;float:left;">
                    @(Html.Kendo().TimePickerFor(model => model.EndTime).Interval(15)
                .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 7, 00, 00))
                .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 18, 00, 00))
                .HtmlAttributes(generateDateTimePickerAttributes("endApptTime", "EndTime", "value:EndTime,invisible:isAllDay")))
                @*.HtmlAttributes( new { style="width:100px;" }))*@
                </div>
            </td>
            <td colspan="2" style="width:20px; text-align:left;" valign="middle">
                @*<div style="height:20px!important;padding: 0px;">
                    @(Html.Kendo().CheckBoxFor(model => model.IsAllDay).Name("IsAllDay").HtmlAttributes(new { id = "hdIsAllDay" }))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Full Day
                </div>*@
                <div data-container-for="isAllDay" class="k-edit-field" style="padding: 0px; width: 20px; margin-top: -5px;">
                    <input data-bind="checked: isAllDay" data-val="true" id="isAllDay" name="IsAllDay" type="checkbox" />
                </div>
            </td>
            <td style="width:70px; text-align:left;">Full Day</td>
        </tr>
    </table>
    <table style="width:99%;">
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td style="width:50px; text-align:right;">@Html.Label("Type")&nbsp;&nbsp;</td>
            <td with="150px">
                <div class="k-edit-field" style="width:150px;float:left;margin-top:5px;">
                    @(Html.Kendo().DropDownListFor(m => m.TypeID)
                     .Name("TypeID")
                     .DataTextField("EvtTShortDescr")
                     .HtmlAttributes(new { style = "width:150px;" })
                     .Value(Model.Title)
                     .DataValueField("ID")
                     .Filter(FilterType.Contains)
                     .Height(290)
                     .DataSource(source => source
                     .Read(read => { read.Action("GetEventTypes", "Appointment"); })) )
                </div>
            </td>
            <td style="width:60px; text-align:right;">@Html.Label("Status")&nbsp;&nbsp;</td>
            <td width="150px">
                <div class="k-edit-field" style="width:150px;margin-top:5px;">
                    @(Html.Kendo().DropDownListFor(m => m.StatusID)
                     .Name("StatusID")
                     .DataTextField("Text")
                     .DataValueField("Value")
                     .HtmlAttributes(new { style = "width:150px;" })
                     .Filter(FilterType.Contains)
                     .Height(290)
                     .Events(e => { e.Change("ClientStatusChange"); e.Select("SetClientsStatus"); })
                     .DataSource(source => source
                     .Read(read => { read.Action("GetEventStatus", "Appointment"); })))
                </div>
            </td>
            <td style="width:100px; text-align:right;margin-top:-2px;">Appt. Office&nbsp;&nbsp;</td>
            <td width="200px">
                <div class="k-editor-field" style="width:200px">
                    @(Html.Kendo().DropDownListFor(m => m.SelectedLocationId)
                     .Name("SelectedLocationId")
                     .OptionLabel("Select Office...")
                     .DataTextField("ComplexDesc")
                     .DataValueField("ComplexID")
                     .MinLength(1)
                     .HtmlAttributes(new { style = "width:200px;" })
                     .Filter(FilterType.Contains)
                     .Height(290)
                     .DataSource(source => source
                     .Read(read => { read.Action("GetAllApptComplex", "Appointment"); })))
                </div>
            </td>
        </tr>
    </table>
    <table style="width:99%;">
        <tr>
            <td width="60px" valign="top">@Html.LabelFor(m => m.IsCompleted)</td>
            <td width="20px" valign="top">
                <div class="k-editor-edit" style="width:20px;height:20px;">
                    @(Html.Kendo().CheckBoxFor(m => m.IsCompleted).Label(""))
                </div>
            </td>
            <td>
                @(Html.Kendo().MultiSelect()
              .Name("SelectedADAItems")
              .AutoClose(false)
              .HtmlAttributes(new { style = "width:620px" })
              .Placeholder("-- Select ADA Accommondations or Effective Communication --")
              .DataTextField("Text")
              .DataValueField("Value")
              .Value(Model.SelectedADAItems)
              .ItemTemplate("<input type='checkbox' name='cb' value='\\#:data.Value\\#' /> \\#:data.Text\\#")
              .Events(evt =>
              {
        evt.DataBound("ADAECDataBound"); evt.Change("ADAECDataChange");
        evt.Close("SetDefault"); evt.Deselect("onDeselect");
    })
              .DataSource(source =>
              {
        source.Read(read =>
        {
            read.Action("GetADAECDescription", "Appointment");

        }).ServerFiltering(true);
    }))
            </td>
        </tr>
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td colspan="2"></td>
            <td width="570px">
                @Html.TextAreaFor(m => m.Description, new { @class = "textareaforcasemanngement", placeholder = "Purpose ...", @style = "maxlength:1000;width:98%;" })
            </td>
        </tr>
        <tr><td colspan="7" style="height:5px;"></td></tr>
    </table>
    <table style="border-bottom-style:solid;border-bottom-width:thin;width:99%;">
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td style="width:60px; text-align:left;">
                <div class="k-editor-label">
                    &nbsp;&nbsp;@Html.Label("Client")&nbsp;&nbsp;
                </div>
            </td>
            <td width="640px" colspan="2">
                <div class="k-edit-field" data-container-for="SelectedClients" style="float:left;width:425px;padding:0;">
                    @(Html.Kendo().MultiSelectFor(m => m.SelectedClients)
                                    .Name("SelectedClients")
                                    .DataValueField("EpisodeID")
                                    .DataTextField("ClientName")
                                    .ValuePrimitive(true)
                                    .Placeholder("No Client ...")
                                    .HtmlAttributes(new { style = "width:425px;font-size:12px!important;" })
                                    .Value(Model.SelectedClients)
                                    .TagTemplate("\\#:data.ClientName\\#<input id='absent\\#:data.EpisodeID\\#' type = 'checkbox' onchange='selectColumn(this, \\#:data.EpisodeID\\#);'  style='margin-left:20px' />Absent" +
        "<input id = 'present\\#:data.EpisodeID\\#' type = 'checkbox' onchange = 'selectColumn(this, \\#:data.EpisodeID\\#);'  style = 'margin-left:2px' />Present" +
        "<input id = 'canceled\\#:data.EpisodeID\\#' type = 'checkbox' onchange = 'selectColumn(this, \\#:data.EpisodeID\\#);'  style = 'margin-left:2px' />Canceled" +
       "<input id = 'excused\\#:data.EpisodeID\\#' type = 'checkbox' onchange = 'selectColumn(this, \\#:data.EpisodeID\\#);'  style = 'margin-left:2px' />Excused")
    .Events(e => { e.Open("OpenStatus"); e.DataBound("SetCheckboxValue"); e.Deselect("ResetCheckboxSet"); })
                                   .DataSource(source =>
                                        source.Read(r => r.Action("GetSelectedEpisodes", "Appointment").Data("function() { return { AppointmentId: '#=AppointmentId#'}}"))))
                </div>

                <div class="k-edit-field" data-container-for="Clients" style="float:right;padding:0;width:200px">
                    @*<button class="btn btn-default dropdown-toggle" id="Clients" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="width:200px;float:right;padding:0px;font-size:12px!important;display:inline-block">*@
                    @(Html.Kendo().DropDownList()
                    .Name("Clients")
                    .OptionLabel("Add Client")
                    .DataValueField("EpisodeID")
                    .DataTextField("ClientName")
                    .HtmlAttributes(new { @style = "width:200px;text-align:left;font-size:12px!important;", @class = "clientDDL" })
                    .Filter(FilterType.Contains)
                    .Height(290)
                    .Events(e => { e.Change("AddToSelectedClients"); e.Close("DDLOnCloseIgnoreFilter"); })
                    .DataSource(source =>
     source.Read(read => read.Action("GetEpisodeList", "Appointment")).ServerFiltering(true)
))
                    @*</button>*@
                </div>
            </td>
        </tr>
        <tr><td colspan="7" style="height:5px;"></td></tr>
        <tr>
            <td style="width:60px; text-align:right;">
                <div class="k-editor-label">
                    &nbsp;&nbsp;&nbsp;&nbsp;@Html.Label("Staff", new { style = "margin-top:0;" })&nbsp;&nbsp;
                </div>
            </td>
            <td width="640px" colspan="2">
                <div class="k-edit-field" data-container-for="SelectedStaffs" style="float:left;width:425px;padding:0;font-size:12px!important;">
                    @(Html.Kendo().MultiSelectFor(m => m.SelectedStaffs)
            .Name("SelectedStaffs")
            .DataValueField("StaffId")
            .DataTextField("StaffName")
            .ValuePrimitive(true)
            .Placeholder("No Staff ...")
            .HtmlAttributes(new { style = "width:425px;", value = "StaffId" })
            .Value(Model.SelectedStaffs)
            .Events(e => e.Change("ChangeStaff"))
            .DataSource(source => source.Read(r => r.Action("GetSelectedStaffs", "Appointment").Data("function() { return { AppointmentId: '#=AppointmentId#', StaffId: '#=SelectedStaffs[0].StaffId#' }}"))
            .Events(events => { events.RequestEnd("RefreshList"); })))
                </div>
                <div class="k-edit-field" data-container-for="Staffs" style="float:right;padding:0;width:200px;font-size:12px!important;">
                    @*<button class="btn btn-default dropdown-toggle" type="button" id="Staffs" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="width:200px;float:right;padding:0px;font-size:12px!important;display:inline-block">*@
                    @(Html.Kendo().DropDownList()
                    .Name("Staffs")
                    .OptionLabel("Add Staff")
                    .DataValueField("StaffId")
                    .DataTextField("StaffName")
                    .HtmlAttributes(new { style = "width:200px;text-align:left;" })
                    .Filter(FilterType.Contains)
                    .Height(290)
                    .Events(e => { e.Change("AddToSelectedStaffs"); e.Close("DDLOnCloseIgnoreFilter"); })
                    .DataSource(source =>
                     {
                         source.Read(read => read.Action("GetApptStaffs", "Appointment")).ServerFiltering(true);
                     }))
                    @*</button>*@
                </div>
            </td>
        </tr>
    </table>
    <br />
    <table style="width:99%;">
        <tr>
            <td style="width:100px; text-align:right;" valign="top">@Html.Label("Availibility")&nbsp;&nbsp;</td>
            <td width="200px">
                <div class="k-edit-field" data-container-for="Availability" style="float:left;">
                    @(Html.Kendo().DropDownList()
                    .Name("Availability")
                    .OptionLabel("Available time ...")
                    .DataValueField("Value")
                    .DataTextField("Text")
                    .Enable(false)
                    .HtmlAttributes(new { style = "width:200px;;" })
                    .Height(290)
                    .Events(e => { e.Change("ChangeSelectedTime"); })
                    .AutoBind(false)
                    )
                </div>
            </td>
            <td colspan="4">&nbsp;&nbsp;
                <button type="button" id="btnCheckAvailability" class="k-button" onclick="CheckAvailability(this)" style="margin-top:-5px;">Get Availability</button>
              &nbsp;&nbsp;</td>
            <td colspan="2">
                <div class="k-editor-edit">&nbsp;&nbsp;&nbsp;&nbsp;
                    @(Html.Kendo().CheckBoxFor(model => model.AutoPrint).Name("AutoPrint").HtmlAttributes(new { id = "AutoPrint" }))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print
                </div>
            </td>
        </tr>
    </table>
</div>

@*@{
    ViewContext.FormContext = null;
}*@


