@using Kendo.Mvc.UI;
@model PATSWebV2.ViewModels.DSM.DsmViewModel

@Html.HiddenFor(m => m.EpisodeId, new { @id = "hdEpisodeId" })
@Html.HiddenFor(m => m.CanEdit, new { @id = "hdEditable" })
@Html.HiddenFor(m => m.DsmId, new { @id = "hdDsmId" })
    <script>
        $('#dsmmainform').on('click', '.textareaforcasemanngement', function (e) {
            TextarePopup(e, false, "color-continue");
        });
        $('#dsmmainform').on('keypress', '.textareaforcasemanngement', function (ev) {
            var keycode = (ev.keyCode ? ev.keyCode : ev.which);
            if (keycode == '10' && ev.ctrlKey) {
                $(this).trigger('click');
            }
        })
        function OnDsmChange(e) {
            var dsm = $("#DsmId").data("kendoDropDownList").dataItem();
            if (dsm.DsmId == "") return;
            var edit = EditableEpisode($("#hdEditable").val()) && (dsm.DsmDate.indexOf("*") > 0);
            change_link(edit);
            $("#gridDSMDiagnosis").data("kendoGrid").dataSource.read({ EpisodeId: $("#hdEpisodeId").val(), DsmId: dsm.DsmId });
        }
        function OnDataBound(e) {
            if (this.selectedIndex == 0)
                this.select(1);
            
            var dsm = $("#DsmId").data("kendoDropDownList").dataItem();
            var edit = EditableEpisode($("#hdEditable").val()) && (dsm.DsmDate.indexOf("*") > 0);
            change_link(edit);
        }
        function change_link(editable) {
            var x = document.getElementById("deletealllink");
            if (editable) {
                var dsm = $("#DsmId").data("kendoDropDownList").dataItem();
                if (dsm.DsmId == "")
                    x.style.display = "none";
                else
                    x.style.display = "block";
                $("#gridDSMDiagnosis .k-grid-toolbar").show();
            }
            else {
                x.style.display = "none";
                $("#gridDSMDiagnosis .k-grid-toolbar").hide();
            }
        }
        function GetDsmId() {
            return { DsmId : $("#hdDsmId").val() }
        }

        function GetEpisodeId() {
            return { EpisodeId: $("#hdEpisodeId").val() }
        }
        function DeleteAllDSMs(e) {
            alert("test")
        }
    </script>
    <table id="smalltable" class="table table-condensed " style="background-color:transparent">
        <tr>
            <td width="170px" style="height:25px!important;">
                <div style="margin-top:10px">@Html.Label("Previous Diagnosis:", new { @style = "float:right;margin-right:10px;" })</div>
            </td>
            <td width="220px" style="height:25px!important;">                       
            
       @(Html.Kendo().DropDownListFor(m => m.DsmId)
        .Events(e => { e.DataBound("OnDataBound"); e.Change("OnDsmChange"); })
        .Name("DsmId")
        .DataTextField("DsmDate")
        .DataValueField("DsmId")
        .HtmlAttributes(new { style = "width:100%;min-width:150px;margin-top:5px;height:20px;" })
        .Filter("contains")
        .OptionLabel("Select Diagnosis Date  ...")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetDSMDateList", "Client").Data("GetEpisodeId");
            });
        })
        .SelectedIndex(0))
            </td>
            <td colspan="4" style="height:25px!important;">
                <div style="float:left;height:22px;width:22px;margin-left:10px;">
                    <a id="deletealllink" title="Delete" style="height:18px!important;width:18px;display:none;" href="#">
                        <img title="Remove all displayed Diagnosis" style="height:22px;width:22px;margin-top:10px;"
                             src='@Url.Content("~/Content/images/delete-2-icon.png")' />
                    </a>
                </div>&nbsp;&nbsp;@Model.NoEditAllowed
            </td>
        </tr>
        <tr><td colspan="6" style="border-bottom:0.5px solid grey;height:20px;"></td></tr>
        <tr><td style="height:5px;" colspan="6"></td></tr>
        <tr><td colspan="6"><strong> Diagnostic Impression:</strong></td></tr>
        <tr><td colspan="6">@Html.TextAreaFor(x => x.DiagnosticImpression, new { @class = "textareaforcasemanngement", @readonly = "readonly" })</td></tr>
        <tr><td style="height:5px;" colspan="6"></td></tr>
    @*</table>             
        @*if (Model.CanEdit) {
   <table>*@
        <tr>
            <td colspan="6">            
                    <script>
                        function error_handler(e) {
                            if (e.errors) {
                                var message = "Errors:\n";
                                $.each(e.errors, function (key, value) {
                                    if ('errors' in value) {
                                        $.each(value.errors, function () {
                                            message += this + "\n";
                                        });
                                    }
                                });
                                alert(message);
                                var grid = $("#gridDSMDiagnosis").data("kendoGrid");
                                grid.one("dataBinding", function (e) {
                                    e.preventDefault();   // cancel grid rebind if error occurs
                                });
                            }
                        }
                        function onRequestEnd(e) {
                           if (e.response.Errors != null) {
                                e.preventDefault();
                                return;
                            }
                           if (e.type == "destroy" || e.type == "create") {
                               $("#gridDSMDiagnosis").data("kendoGrid").dataSource.read({ EpisodeId: $("#hdEpisodeId").val(), DsmId: 0 });
                                var combobox = $("#DsmId").data("kendoDropDownList");
                                combobox.dataSource.read({ EpisodeId: $("#hdEpisodeId").val() });
                                combobox.select(0);
                            }
                        }
                        function BeforeSave(e) {
                            if (confirm("Are you sure you want to save this DSM?") == false) {
                                e.preventDefault();
                                return false;
                            }
                            var typeId = $("#DsmTypeId").data("kendoDropDownList").value();
                            e.model.DsmTypeId = typeId == "" ? null : parseInt(typeId);
                            var specifierId = $("#DsmSpecifierId").data("kendoDropDownList").value();
                            e.model.DsmSpecifierId = specifierId == "" ? null : parseInt(specifierId);
                            if (e.model.DateDsmDate == null)
                                e.model.DateDsmDate = new Date();
                        }
                        function OnGridDataBound(e) {
                            var id = parseInt($("#DsmId").data("kendoDropDownList").value());
                            var theLastOne = ($("#DsmId").data("kendoDropDownList").text().indexOf("*") > 0);
                            var edit = EditableEpisode($("#hdEditable").val()) && (id > 0 && theLastOne);
                            //if (!edit)
                            //    $(".k-grid-add").removeClass("k-grid-add")
                            //          .addClass("k-state-disabled")
                            //          .removeAttr("href");
                            //this.expandRow(this.tbody.find("tr.k-master-row").first());
                            var grid = this;
                            grid.tbody.find("tr[role='row']").each(function () {
                                if (!edit) {
                                    $(this).find(".k-grid-delete").hide();
                                }
                            });
                        }
                             
                        function DataDsmType(e) {
                            if(e.sender.select() ===0 || e.sender._state === "filter")
                                e.preventDefault();
                        }
                    </script>
               
                    @(Html.Kendo().Grid<IdentityManagement.Entities.DsmData>()
    .Name("gridDSMDiagnosis")
    .ToolBar(tools => tools.Create().Text("Add New Diagnosis").HtmlAttributes( new { @style="background-color:yellow;" }))
    .Columns(columns =>
    {
        columns.Bound(o => o.Id).Hidden();
        columns.Bound(o => o.DsmId).Hidden();
        columns.Bound(o => o.DsmTypeId).Hidden();
        columns.Bound(o => o.DsmSpecifierId).Hidden();
        columns.Bound(p => p.MasterDXId).Hidden();
        columns.Bound(p => p.DateDsmDate).Format("{0:hh:mm tt}").Title("DSM Time").Width(80).Hidden();
        columns.Bound(p => p.IcdCode).Width(80).Title("ICD Code").HtmlAttributes(new { style = "line-height:24px!important;" });
        columns.Bound(p => p.DsmDesc).Title("DSM Description").Width(300);
        columns.Bound(p => p.DsmType).Title("DSM Type").Width(100);
        columns.Bound(p => p.DsmSpecifier).Title("DSM Specifier").Width(100);
        columns.Bound(p => p.ClinicalName).Title("Action By").Width(100);
        columns.Bound(p => p.Comments).Title("Comments").Width(100);
        columns.Command(command => { command.Destroy(); }).Title("Delete").Width(80);
    })
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_NewDsm").Window(w => w.Title("New Diagnosis")))
    .Events(evt => { evt.DataBound("OnGridDataBound"); evt.Save("BeforeSave"); })
    .Sortable(sortable => sortable.AllowUnsort(true))
    .Scrollable(a => a.Height("45vh"))
    .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
    .Navigatable()
    .HtmlAttributes(new { style = "padding:0px;" })
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(new List<object> { 5, 10, 20, 30, 50 })
    .ButtonCount(5))
    .Filterable(filterable => filterable
    .Extra(false)
    .Operators(operators => operators
        .ForString(str => str.Clear()
        .StartsWith("Starts with")
        .IsEqualTo("Is equal to")
        .IsNotEqualTo("Is not equal to")
        ))
    )
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
    .PageSize(10)
    .Model(model =>
    {
        model.Id(f => f.Id);
        model.Field(f => f.DsmId);
        model.Field(f=>f.DsmTypeId);
        model.Field(f => f.DsmSpecifierId);
        model.Field(f=>f.MasterDXId);
    })
    .Create(create => create.Action("DSMDiagnosisCreate", "Client", new { EpisodeId = Model.EpisodeId, DsmId = Model.DsmId }).Type(HttpVerbs.Post))
    .Read(read => read.Action("DSMDiagnosisRead", "Client", new { EpisodeId = Model.EpisodeId, DsmId = Model.DsmId }))
    .Destroy(destroy => destroy.Action("DSMDiagnosisDestroy", "Client", new { EpisodeId = Model.EpisodeId }).Type(HttpVerbs.Post))
    .Sort(sort => sort.Add("DateDsmDate").Descending())))
                <script id="template" type="text/x-kendo-template">
                    <div>
                        <table>
                            <tr>
                                <th width="70%">DSM Description</th>
                                <th width="30%">Comments</th>
                            </tr>
                            <tr>
                                <td width="70%"><div style="word-wrap:break-word">#=changeNewLine(DsmDesc)#</div></td>
                                <td width="30%"><div>#=changeNewLine(Comments)#</div></td>
                            </tr>

                        </table>
                    </div>
                </script>                      
            </td>
        </tr>
    </table>

<script type="text/javascript">
    $("#deletealllink").on('click', function (e) {
        if (!confirm("Delete all listed Diagnosises?")) {
            return false;
        }
        $.ajax({
            type: 'POST',
            url: "/Client/DeleteDsmDiagnosis",
            data: { EpisodeId: $("#AllSelectedOffenderEpisodeResult").val(), DsmId: $("#DsmId").data("kendoDropDownList").value() },
            cache: false,
            dataType: "html",
            success: function (response) {
                $("#DsmId").data("kendoDropDownList").dataSource.read({ EpisodeId: $("#AllSelectedOffenderEpisodeResult").val() });
                $("#gridDSMDiagnosis").data("kendoGrid").dataSource.read({ EpisodeId: $("#AllSelectedOffenderEpisodeResult").val(), DsmId: 0 });
                return true;
            },
            error: function (data, textStatus, xhr) {
                return false;
            }
        });
    })
</script>




