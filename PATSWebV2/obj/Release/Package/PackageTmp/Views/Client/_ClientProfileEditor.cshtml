
@using Kendo.Mvc.UI
@model  PATSWebV2.ViewModels.Client.ClientEditViewModel
<style>
    .k-checkbox-label {
        margin-top: -8px;
    }
</style>
<div id="divClientprofile">
     @using (Ajax.BeginForm("SaveClientProfile", "Client", null,
          new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "viewPlaceHolder", InsertionMode = InsertionMode.Replace},
          new { @id = "getClientProfileForm", @name = "Client Profile", @newProfile = Model.NewProfile, @style = "min-height: 500px;", @class = "color-primary" }))
     { 
         @(Html.AntiForgeryToken())   
   <script>
    function onOpen(e){
        e.sender.center();
        $(".k-i-excel").attr("title","Print to Excel");
        $(".k-i-pdf").attr("title", "Print to PDF");
        $(".k-i-add").attr("title", "Create New Client").bind("click", function (e) { CreateNewClient(e) });
    }
    
    </script>
    <div id="divWindow" class="form-group">
        @(Html.Kendo().Window()
                .Name("NewProfileWindow")
                .Width(1020)
                .Height(400)
                .HtmlAttributes(new { style = "background-color:cornflowerblue" })
                .Title("Match CDCR")
                .Actions(actions => actions.Refresh().Minimize().Maximize().Close())
                .LoadContentFrom("GetMatchCases", "Client")
            .Draggable(true)
            .Visible(false)
            .Events(events => { events.Open("onOpen"); }))
    </div>
    <div id="clientprofilediv" class="color-primary">
        @Html.ValidationSummary(false)
        @Html.HiddenFor(m => m.Profile.EpisodeId, new { @id = "hdEpisodeID" })
        @Html.HiddenFor(m => m.Profile.ComplexId, new { @id = "hdComplexId" })
        @Html.HiddenFor(m => m.Profile.CountyId, new { @id = "hdCountyId" })
        @Html.HiddenFor(m => m.Profile.SelectedLocationId, new { @id = "hdSelectedLocationId" })
        @Html.HiddenFor(m => m.NewProfile, new { @id = "hdNewProfile" })
        @Html.HiddenFor(m => m.Profile.CDCRNumber, new { @id = "hdCDCRNumber" })
        @Html.HiddenFor(m => m.Profile.PID, new { @id = "hdPID" })
        @Html.HiddenFor(m => m.EditingEnabled, new { @id = "hdEditingEnabled" })
        @Html.HiddenFor(m => m.CanDoASAM, new { @id = "hdCanDoASAM" })
        @Html.HiddenFor(m => m.Profile.MHLevelOfService, new { @id = "hdMHLevelOfService" })
        <script>
        function CasePlayClose(e) {
           var start = $("#date-picker-intake").val();
            if (start != "") {
                if (!DateTimeCompare(start, $("#date-picker-closure").val())) {
                    $("#date-picker-closure").data("kendoDatePicker").value("");
                    return false;
                };
            }
            //ensure to disable casebank
            var bankDate = $("#date-picker-banked").data("kendoDatePicker");
            bankDate.value("");
            bankDate.enable(false);

            if ($("#date-picker-closure").val() == "" || $("#date-picker-closure").val() == "__/__/____")
            {
                bankDate.enable(true);
                return false;
            }
            if ($("#ddlClosurereaon").val() == -1) {
                $("#profileSave").prop("disabled", "disabled");
                alert("Must Enter Case Closure Reason.");
                return false;
            }

            CaseDatePickerChanges();
            UpdateCaseStatus(2);
        }
        function CasePlayOpen(e) {
            var cap = "Reopen";
            if($("#date-picker-closure").val() == "")
            {
                if ($("#date-picker-intake").val() == "" ||
                    $("#date-picker-intake").val() == "__/__/____")
                {
                    cap = "Cancel Open";
                }
                else
                    cap="Open";
            }

            if (confirm(cap + " Case?", cap) == false) {
                return false;
            }

            $("#date-picker-banked").val("");
            $("#date-picker-closure").val("");
            var ddl = $("#ddlClosurereaon").data("kendoDropDownList");
            ddl.value("-1");
            CaseDatePickerChanges();
            UpdateCaseStatus(1);
        }
        function CasePlayBank(e) {
            var start = $("#date-picker-intake").val();
            if (start != "") {
                if (!DateTimeCompare(start, $("#date-picker-banked").val())) {
                    $("#date-picker-banked").data("kendoDatePicker").value("");
                    return false;
                };
            }
            CaseDatePickerChanges();
            UpdateCaseStatus(3);
        }
        function IsimpePlayEnroll(e) {
            var endDate = "";
            if ($("#date-picker-ismipc").val() != "") {
                endDate = $("#date-picker-ismipc").val()
            }
            if (endDate != "") {
                if (!DateTimeCompare($("#date-picker-ismipe").val(""), endDate)) {
                    $("#date-picker-ismipe").data("kendoDatePicker").value("");
                    $("#date-picker-ismipc").data("kendoDatePicker").value("");
                };
            }
            ISMIPDatePickerChanges();
        }
        function IsimpcPlayClose(e) {
            var start = $("#date-picker-ismipe").val();
            if (start != "") {
                if (!DateTimeCompare(start, $("#date-picker-ismipe").val())) {
                    $("#date-picker-ismipe").data("kendoDatePicker").value("");
                };
            }
            ISMIPDatePickerChanges();
        }
        function CMSPlayEnroll(e) {
            var endDate = "";
            if ($("#date-picker-cmc").val() != "") {
                endDate = $("#date-picker-cmc").val()
            }

            if (endDate != "") {
                if (!DateTimeCompare($("#date-picker-cms").val(), endDate)) {
                    $("#date-picker-cms").data("kendoDataPicker").value("");
                    $("#date-picker-cmc").data("kendoDataPicker").value("");
                };
            }
            CMDatePickerChanges();
        }
        function CMCPlayClose(e) {
            var start = $("#date-picker-cms").val();
            if (start != "") {
                if (!DateTimeCompare(start, $("#date-picker-cmc").val())) {
                    $("#date-picker-cmc").data("kendoDatePicker").value("");
                };
            }
            CMDatePickerChanges();
        }
        function MATSPlayEnroll(e) {
            var endDate = "";
            if ($("#date-picker-matc").val() != "") {
                endDate = $("#date-picker-matc").val()
            }

            if (endDate != "") {
                if (!DateTimeCompare($("#date-picker-mats").val(), endDate)) {
                    $("#date-picker-mats").data("kendoDataPicker").value("");
                    $("#date-picker-matc").data("kendoDataPicker").value("");
                };
            }
            MATDatePickerChanges();
        }
        function MATCPlayClose(e) {
            var start = $("#date-picker-mats").val();
            if (start != "") {
                if (!DateTimeCompare(start, $("#date-picker-matc").val())) {
                    $("#date-picker-matc").data("kendoDataPicker").value("");
                };
            }
            MATDatePickerChanges();
        }
        function CmrpePlayEnroll(e) {
            var endDate = "";
            if ($("#date-picker-cmrpec").val() != "") {
                endDate = $("#date-picker-cmrpec").val()
            }

            if (endDate != "") {
                if (!DateTimeCompare($("#date-picker-cmrpes").val(), endDate)) {
                    $("#date-picker-cmrpes").data("kendoDataPicker").value("");
                    $("#date-picker-cmrpec").data("kendoDataPicker").value("");
                };
            }
            CmrpeDatePickerChanges();
        }
        function CmrpePlayClose(e) {
            var start = $("#date-picker-cmrpes").val();
            if (start != "") {
                if (!DateTimeCompare(start, $("#date-picker-cmrpec").val())) {
                    $("#date-picker-cmrpec").data("kendoDataPicker").value("");
                };
            }
            CmrpeDatePickerChanges();
        }
        function findMatchCase() {
            var cdcr = document.getElementById("txtCDCRNumber").value;
            var pid = document.getElementById("txtPID").value;

            if (cdcr == null || cdcr.length < 6) {
                alert("CDCR Number is required and must be 6 characters.");
                return false;
            }

            if (pid == null || pid.length < 8) {
                alert("PID is required and must be 8 digits.");
                return false;
            }

            $("#gridMatches").data('kendoGrid').dataSource.read({ PID: pid, CDCRNum: cdcr });
            $("#NewProfileWindow").data("kendoWindow").center().open();
        }
        function MHChanged(e) {
            $("#hdMHLevelOfService").val($("#MHLevelOfService").val());
        }
        function EnableDropDown() {
            var dropdownlist = $("#SelectedLocationId").data("kendoDropDownList");
            if ($("#ComplexID").val() == undefined || $("#ComplexID").val() == "") {
                if (dropdownlist !== undefined) {
                    dropdownlist.enable(false);
                    dropdownlist.select(0);
                    $("#SelectedLocationId_validationMessage").hide();
                }

            }
            else
                if (dropdownlist !== undefined) {
                    dropdownlist.enable(true);
                }
        }
        </script>

        @if (Model.NewProfile)
        {
            <h6 style="color:darkblue; margin-top:10px;"><strong><i><u>Must enter CDCR # and PID to find a match case</u></i></strong></h6>
        }

        <table style="width:99.5%" class="table table-borderless">
            <tr>
                <td>
                    <fieldset class="fieldset1" style="width:99%;">
                        <table class="table table-condensed table-borderless" style="background-color:transparent;min-width:1200px;width:98%;">
                            <tr>
                                @if (Model.NewProfile)
                                {
                                    <td colspan="2" style="width:20%;">
                                        <fieldset class="fieldset1" style="width:95%;">
                                            <table class="table table-condensed color-primary" style="background-color:transparent; width:100%;">
                                                <tr>
                                                    <td class="clientLabAlign" width="80px"><scan style="color:red">*</scan>CDCR #:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                                    <td>
                                                        @Html.Kendo().TextBoxFor(m => m.Profile.CDCRNumber).HtmlAttributes(new
                                                   {
                                                       @style = "width:175px",
                                                       @id = "txtCDCRNumber",
                                                       @maxlength = "6",
                                                       onkeypress = "IgnoreEnterKey(event)"
                                                   }).Enable(true)
                                                        @Html.ValidationMessageFor(m => m.Profile.CDCRNumber)
                                                    </td>
                                                    <td>@(Html.Kendo().Button().Name("bntmatch")
                .Icon("search").Content("")
                .HtmlAttributes(new { type = "button", style = "height:22px;width:22px;", @class = "primary-button", @title = "Search matching case." })
                .Events(e => { e.Click("findMatchCase"); }).Enable(true))</td>
                                                </tr>
                                                <tr>
                                                    <td class="col-lg-1 clientLabAlign"><scan style="color:red">*</scan>PID:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                                    <td colspan="2">
                                                        @(Html.Kendo().TextBoxFor(m => m.Profile.PID).HtmlAttributes(new { @size = 10, @id = "txtPID", Value = Model.Profile.PID == 0 ? "" : Model.Profile.PID.ToString(), @class = "numberonly", @maxlength = "8", onkeypress = "IgnoreEnterKey(event)" }).Enable(true))
                                                    </td>
                                                </tr>
                                            </table>
                                        </fieldset>
                                    </td>
                                }
                                else
                                {
                                    <td class="clientLabAlign" style="width:9%;"><scan style="color:red">*</scan>CDCR #:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                    <td style="width:10%;">
                                        @(Html.Kendo().TextBoxFor(m => m.Profile.CDCRNumber).HtmlAttributes(new { @readonly = "readonly" }) )
                                    </td>
                                }
                                <td class="clientLabAlign" style="width:10%;">DOB:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                <td style="width:10%;">
                                    @(Html.Kendo().DatePickerFor(m => m.Profile.DOB).Format("MM/dd/yyyy").Value(Model.Profile.DOB).HtmlAttributes(new
                                {
                                    @style = "width:140px",
                                    @id = "date-picker-DOB",
                                    @class = "offenderdp"
                                }))
                                </td>
                                <td class="clientLabAlign" style="width:10%;">Ethnicity:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                <td style="width:10%;">
                                @(Html.Kendo().DropDownListFor(m => m.Profile.EthnicityId)
         .BindTo(Model.AllEthnicities)
         .DataValueField("EthnicityID")
         .DataTextField("EthnicityDesc")
         .HtmlAttributes(new { @style = "width:200px", @id = "ddlEthnicity" }).OptionLabel("(Unknown)"))
                            </td>
                            <td class="clientLabAlign" style="width:10%;">Parole Agent:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>@(Html.Kendo().TextBoxFor(m => m.Profile.ParoleAgent).HtmlAttributes(new {@id= "txtParoleAgent", @style = "width:200px" , onkeypress = "IgnoreEnterKey(event)" }))</td>
                        </tr>
                        <tr>
                            <td class="clientLabAlign" style="width:9%;"><scan style="color:red">*</scan>Last Name:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td style="width:10%;">
                                @(Html.Kendo().TextBoxFor(m => m.Profile.LastName).HtmlAttributes(new { @style = "width:200px", @id = "txtLastName" , onkeypress = "IgnoreEnterKey(event)" }))<br />
                                @Html.ValidationMessageFor(m => m.Profile.LastName)
                            </td>
                            <td class="clientLabAlign" style="width:10%;"><scan style="color:red">*</scan>Gender:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td style="width:10%;">
                                @(Html.Kendo().DropDownListFor(m => m.Profile.GenderID)
       .DataValueField("GenderID").DataTextField("Name")
       .BindTo(Model.AllGenders).HtmlAttributes(new { @id = "ddlGender" }).OptionLabel("(Unknown)"))
                        </td>
                        <td class="clientLabAlign" style="width:10%;">Release Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">
                            @(Html.Kendo().DatePickerFor(m => m.Profile.ReleaseDate).Format("MM/dd/yyyy").Value(Model.Profile.ReleaseDate).HtmlAttributes(new
                        {
                            @style = "width:140px",
                            @id = "date-picker-rd",
                            @class = "offenderdp"
                        }))
                        </td>
                        <td class="clientLabAlign" style="width:10%;">PC290:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">@(Html.Kendo().CheckBoxFor(m => m.Profile.PC290))</td>
                    </tr>
                    <tr>
                        <td class="clientLabAlign" style="width:9%;"><scan style="color:red">*</scan>First Name:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">
                            @(Html.Kendo().TextBoxFor(m => m.Profile.FirstName).HtmlAttributes(new { @style = "width:200px", @id = "txtFirstName", onkeypress = "IgnoreEnterKey(event)" }))<br />
                            @Html.ValidationMessageFor(m => m.Profile.FirstName)
                        </td>
                        <td class="clientLabAlign" style="width:10%;">SSN:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">
                            @(Html.Kendo().MaskedTextBoxFor(m => m.Profile.SSN).Mask("000-00-0000")
.HtmlAttributes(new { @id = "ssn", @style = "width:200px" }))
                        </td>
                        <td class="clientLabAlign" style="width:10%;">Planned Clinic:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">
                            <script>
                                function ComplexChanged(e) {
                                    EnableDropDown();
                                }
                            </script>
                            @(Html.Kendo().DropDownListFor(m => m.Profile.ComplexId).BindTo(Model.AllCountys)
            .Name("ComplexID")
            .DataTextField("ComplexDesc")
            .DataValueField("ComplexID")
            .HtmlAttributes(new { style = "width:200px" })
            .OptionLabel("(Unknown)").Events(e => { e.Change("ComplexChanged"); }))

                        <td class="clientLabAlign" style="width:10%;">PC457:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">@(Html.Kendo().CheckBoxFor(m => m.Profile.PC457).HtmlAttributes(new { @class = "alignleft" }))</td>

                    </tr>
                    <tr>
                        <td class="clientLabAlign" style="width:9%;">Mdl. Name:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">
                            @(Html.Kendo().TextBoxFor(m => m.Profile.MidName).HtmlAttributes(new { @style = "width:200px", onkeypress = "IgnoreEnterKey(event)", id= "txtMidName" }))<br />
                            @Html.ValidationMessageFor(m => m.Profile.MidName)
                        </td>
                        <td class="clientLabAlign" style="width:10%;">Place Of Birth:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">@(Html.Kendo().TextBoxFor(m => m.Profile.POB).HtmlAttributes(new { id = "txtPOB", @style = "width:200px" , onkeypress = "IgnoreEnterKey(event)" }))</td>
                        <td class="clientLabAlign" style="width:10%;">Parole Loc.:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">
                            <script>

                                function FilterCounty() {
                                    return { ComplexID: $("#ComplexID").val() };
                                }

                                function locationchanged(e) {
                                    $("#hdComplexId").val($("#ComplexID").val());
                                    $("#hdSelectedLocationId").val($("#SelectedLocationId").val());
                                    if ($("#SelectedLocationId").val() != "") {
                                        $("#SelectedLocationId").kendoValidator().data("kendoValidator").validate();
                                    }
                                    //validator.validate();
                                }

                            </script>
                            @(Html.Kendo().DropDownListFor(m => m.Profile.SelectedLocationId)
            .Name("SelectedLocationId")
            .HtmlAttributes(new { style = "width:200px;", @data_value_primitive = "true", @required = "required" })
            .OptionLabel("Select Location ...")
            .DataTextField("LocationDesc")
            .DataValueField("LocationID")
            .Events(e => { e.Change("locationchanged"); })
            .DataSource(source =>
            {
                source.Read(read => read.Action("GetLocationList", "Client").Data("FilterCounty"))
                .ServerFiltering(true);
            }).SelectedIndex(0)
            .Enable(false)
            .AutoBind(false)
            .CascadeFrom("ComplexID"))
                            <br />
                        </td>
                        <td class="clientLabAlign" style="width:10%;">Lifer:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">@(Html.Kendo().CheckBoxFor(m => m.Profile.Lifer).HtmlAttributes(new { @class = "alignleft" }))</td>
                    </tr>
                    <tr><td colspan="8" class="space5"></td></tr>
                    <tr>
                        <td class="clientLabAlignlight" style="width:9%;">Alias:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">@(Html.Kendo().TextBoxFor(m => m.Profile.Alias).HtmlAttributes(new { @id= "txtAlias", @style = "width:200px", onkeypress = "IgnoreEnterKey(event)" }))</td>
                        <td class="clientLabAlignlight" style="width:10%;">SIGNIT Other:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:10%;">
                            @(Html.Kendo().DropDownListFor(m => m.Profile.SignificantOtherStatus)
                         .DataValueField("SignificantOtherStatusCode")
                         .DataTextField("SignificantOtherStatusDesc")
                         .BindTo(Model.AllSignOtherStatuses).HtmlAttributes(new { @id = "ddlSignificantOtherStatus", @style = "width:200px" })
                         .OptionLabel("(Unknown)"))
                    </td>
                    <td class="clientLabAlignlight" style="width:10%;">LOC BHR:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                    <td style="width:10%;">
                        @(Html.Kendo().DropDownListFor(m => m.Profile.MHLevelOfService)
                            .DataValueField("ParoleMentalHealthLevelOfServiceID")
                            .DataTextField("ParoleMentalHealthLevelOfServiceDescShort")
                            .BindTo(Model.AllParoleMentalHealthLOfS).Name("MHLevelOfService")
                            .HtmlAttributes(new { @style = "width:150px", @class = (@Model.IsLOCAdmin ? "" : "alwayDisabled")})
                            .Events(e => e.Change("MHChanged"))
                            .OptionLabel("(Unknown)"))
                </td>
                <td class="clientLabAlignlight" style="width:10%;">Discharge Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                <td style="width:10%;">
                    @(Html.Kendo().DatePickerFor(m => m.Profile.ParoleDisChargeDate).Format("MM/dd/yyyy").Value(Model.Profile.ParoleDisChargeDate.HasValue ? Model.Profile.ParoleDisChargeDate.Value.ToString("MM/dd/yyyy") : null).HtmlAttributes(new
                {
                    @style = "width:120px",
                    @id = "date-picker-dch",
                    @class = "offenderdp"
                }))
                </td>
            </tr>
        </table>
                    </fieldset>
                </td>
           </tr>
            <tr><td height="30"></td></tr>
           <tr>
              <td>
                @if (!Model.NewProfile)
                {
                   <table id="clientprofiletable" class="table table-condensed table-borderless" style="background-color:transparent; margin-top:-10px;width:100%">
                <tr>
                    <td width="20%" class="alignleft">
                        <fieldset class="fieldset1">
                            <table class="table table-condensed" style="background-color:transparent">
                                <tr>
                                    <td class="clientLabAlignlight">Case Open Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                    <td>
                                        @(Html.Kendo().DatePickerFor(m => m.Profile.InTakeDate).Format("MM/dd/yyyy").Value(Model.Profile.InTakeDate.HasValue ? Model.Profile.InTakeDate.Value.ToString("MM/dd/yyyy") : null).Events(e => e.Change("CasePlayOpen")).HtmlAttributes(new
                                    {
                                        @style = "width:140px",
                                        @id = "date-picker-intake",
                                        @class = "offenderdp"
                                    }))
                                    </td>
                                </tr>
                                <tr>
                                    <td class="clientLabAlignlight">Case Banked Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                    <td>
                                        @(Html.Kendo().DatePickerFor(m => m.Profile.CaseBankedDate).Format("MM/dd/yyyy").Value(Model.Profile.CaseBankedDate.HasValue ? Model.Profile.CaseBankedDate.Value.ToString("MM/dd/yyyy") : "").HtmlAttributes(new
                                    {
                                        @style = "width:140px",
                                        @id = "date-picker-banked",
                                        @class = "offenderdp"
                                    }).Events(e => e.Change("CasePlayBank")))
                                    </td>
                                </tr>
                                <tr>
                                    <td class="clientLabAlignlight">Case Referral Source:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                    <td>
                                        @(Html.Kendo().DropDownListFor(m => m.Profile.CaseReferral)
         .DataValueField("CaseReferralSourceCode")
         .DataTextField("CaseReferralSourceDesc")
         .BindTo(Model.AllCaseReferrals).HtmlAttributes(new { @id = "ddlCaseReferral", @style = "width:200px" })
         .OptionLabel("(Unknown)"))
                                </td>
                            </tr>
                            <tr>
                                <td class="clientLabAlignlight">Case Closure Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                <td>
                                    @(Html.Kendo().DatePickerFor(m => m.Profile.CaseClosureDate).Format("MM/dd/yyyy").Value(Model.Profile.CaseClosureDate.HasValue ? Model.Profile.CaseClosureDate.Value.ToString("MM/dd/yyyy") : "").Events(e => e.Change("CasePlayClose")).HtmlAttributes(new
                                {
                                    @style = "width:140px",
                                    @id = "date-picker-closure",
                                    @class = "offenderdp"
                                }))
                                </td>
                            </tr>
                            <tr>
                                <td class="clientLabAlignlight">Case Closure Reason:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                <td>
                                    @(Html.Kendo().DropDownListFor(m => m.Profile.CaseClosureReasonID)
           .DataValueField("CaseClosureReasonCode")
           .DataTextField("CaseClosureReasonDescShort")
           .BindTo(Model.AllCaseClosureReasons).HtmlAttributes(new { @id = "ddlClosurereaon", @style = "width:200px" })
           .OptionLabel("(Unknown)"))
                            </td>
                        </tr>
                        <tr>
                            <td class="clientLabAlignlight">Convicted Of Stalking:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td class="alignleft">
                                @(Html.Kendo().DropDownListFor(m => m.Profile.IsConvictedOfStalking).BindTo(
              new List<SelectListItem>(){
                                  new SelectListItem() { Text = "True", Value ="True"},
                                  new SelectListItem() {Text = "False", Value ="False"} })
                .HtmlAttributes(new { @style = "width:100px" }).OptionLabel("Not Set"))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
            <td width="22%" style="padding:0px 5px 5px 5px">
                <fieldset class="fieldset1">
                    <table class="table table-condensed" style="background-color:transparent">
                        <tr>
                            <td class="clientLabAlignlight">ISMIP Referred Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.ISMIPReferredDate).Format("MM/dd/yyyy").Value(Model.Profile.ISMIPReferredDate.HasValue ? Model.Profile.ISMIPReferredDate.Value.ToString("MM/dd/yyyy") : null).HtmlAttributes(new
                            {
                                @style = "width:140px",
                                @id = "date-picker-ismipr",
                                @class = "offenderdp"
                            }))
                            </td>
                        </tr>
                        <tr>
                            <td class="clientLabAlignlight">ISMIP Enrolled Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.ISMIPEnrolledDate).Format("MM/dd/yyyy").Value(Model.Profile.ISMIPEnrolledDate.HasValue ? Model.Profile.ISMIPEnrolledDate.Value.ToString("MM/dd/yyyy") : null).Events(e => e.Change("IsimpePlayEnroll")).HtmlAttributes(new
        {
            @style = "width:140px",
            @id = "date-picker-ismipe",
            @class = "offenderdp"
        }))
                            </td>
                        </tr>
                        <tr>
                            <td class="clientLabAlignlight">ISMIP Closed Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.ISMIPClosedDate).Format("MM/dd/yyyy").Value(Model.Profile.ISMIPClosedDate.HasValue ? Model.Profile.ISMIPClosedDate.Value.ToString("MM/dd/yyyy") : null).Events(e => e.Change("IsimpcPlayClose")).HtmlAttributes(new
                            {
                                @style = "width:140px",
                                @id = "date-picker-ismipc",
                                @class = "offenderdp"
                            }))
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset style="height:5px;border:none;"></fieldset>
                <fieldset class="fieldset1">
                    <table class="table table-condensed" style="background-color:transparent">
                        <tr>
                            <td class="clientLabAlignlight">CMRPE Started Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.CMRPEStartDate).Format("MM/dd/yyyy").Value(Model.Profile.CMRPEStartDate.HasValue ? Model.Profile.CMRPEStartDate.Value.ToString("MM/dd/yyyy") : null).Events(e => e.Change("CmrpePlayEnroll")).HtmlAttributes(new
                            {
                                @style = "width:140px",
                                @id = "date-picker-cmrpes",
                                @class = "offenderdp"
                            }))
                            </td>
                        </tr>
                        <tr>
                            <td class="clientLabAlignlight">CMRPE Closed Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.CMRPEClosedDate).Format("MM/dd/yyyy").Value(Model.Profile.CMRPEClosedDate.HasValue ? Model.Profile.CMRPEClosedDate.Value.ToString("MM/dd/yyyy") : null).Events(e => e.Change("CmrpePlayClose")).HtmlAttributes(new
                            {
                                @style = "width:140px",
                                @id = "date-picker-cmrpec",
                                @class = "offenderdp"
                            }))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
            <td width="25%">
                <fieldset class="fieldset1">
                    <table class="table table-condensed" style="background-color:transparent">
                        <tr>
                            <td class="clientLabAlignlight">Case Management Started Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.CMProgramStartDate).Format("MM/dd/yyyy").Value(Model.Profile.CMProgramStartDate.HasValue ? Model.Profile.CMProgramStartDate.Value.ToString("MM/dd/yyyy") : null)
                                    .Events(e => e.Change("CMSPlayEnroll"))
                                    .HtmlAttributes(new
                                    {
                                        @style = "width:140px",
                                        @id = "date-picker-cms",
                                        @class = "offenderdp"
                                    }))
                            </td>
                        </tr>
                        <tr>
                            <td class="clientLabAlignlight">Case Management Closed Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.CMProgramClosedDate).Format("MM/dd/yyyy").Value(Model.Profile.CMProgramClosedDate.HasValue ? Model.Profile.CMProgramClosedDate.Value.ToString("MM/dd/yyyy") : null)
                                    .Events(e => e.Change("CMCPlayClose"))
                                    .HtmlAttributes(new
                                    {
                                        @style = "width:140px",
                                        @id = "date-picker-cmc",
                                        @class = "offenderdp"
                                    }))
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset style="height:5px;border:none;"></fieldset>
                <fieldset class="fieldset1">
                    <table class="table table-condensed" style="background-color:transparent">
                        <tr>
                            <td class="clientLabAlignlight">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAT Program Started Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.MATProgramStartDate).Format("MM/dd/yyyy").Value(Model.Profile.MATProgramStartDate.HasValue ? Model.Profile.MATProgramStartDate.Value.ToString("MM/dd/yyyy") : null)
.Events(e => e.Change("MATSPlayEnroll"))
.HtmlAttributes(new
{
    @style = "width:140px",
    @id = "date-picker-mats",
    @class = "offenderdp"
}))
                            </td>
                        </tr>
                        <tr>
                            <td class="clientLabAlignlight">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAT Program Closed Date:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td>
                                @(Html.Kendo().DatePickerFor(m => m.Profile.MATProgramClosedDate).Format("MM/dd/yyyy").Value(Model.Profile.MATProgramClosedDate.HasValue ? Model.Profile.MATProgramClosedDate.Value.ToString("MM/dd/yyyy") : null)
.Events(e => e.Change("MATCPlayClose"))
.HtmlAttributes(new
{
    @style = "width:140px",
    @id = "date-picker-matc",
    @class = "offenderdp"
}))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
         <tr><td height="20"></td></tr>
        <tr>
            <td colspan="3">
                <fieldset class="fieldset1">
                    <table>
                        <tr>
                            <td style="text-align: right; padding-right: 2em; margin-left: 20px;width:150px">&nbsp;&nbsp;&nbsp;&nbsp;ASAM Screen Date:</td>
                            <td class="clientLabAlignlight" style="width:150px">
                                @(Html.Kendo().DatePickerFor(m => m.Profile.ASAMDate).Format("MM/dd/yyyy").Value(Model.Profile.ASAMDate.HasValue ? Model.Profile.ASAMDate.Value.ToString("MM/dd/yyyy") : null).HtmlAttributes(new
                            {
                                @style = "width:140px",
                                @id = "date-picker-asamd",
                                @class = "offenderdp"
                            }))
                            </td>
                            <td>@Html.Label("Inclusion Criteria Met:", new { style = "float:right;font-size:14px;" })</td>
                            <td class="clientLabAlignlight">&nbsp;&nbsp;&nbsp;&nbsp;                
                                <div style="margin-top:28px;float:left;">
                                    @(Html.Kendo().CheckBoxFor(m => m.Profile.InclusionCriteriaMetYes).HtmlAttributes(new { id = "InclusionCriteriaMetYes", @class = "criteriamet" }).Label("YES"))  
                                    @(Html.Kendo().CheckBoxFor(m => m.Profile.InclusionCriteriaMetNo).HtmlAttributes(new { id = "InclusionCriteriaMetNo", @class = "criteriamet" }).Label("NO"))
                                </div>   
                            </td>
                            <td>
                                @Html.HiddenFor(m => m.Profile.AsamFileId, new { id = "hdAsamFileId" })
                                @if (Model.Profile.AsamFileId > 0)
                                {
                                    <a href='@Url.Action("Download", "Client", new { id = Model.Profile.AsamFileId })' id="fileLink">View ASAM Report</a>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right; padding-right:1em">Comments:&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            <td colspan="4">
                                @(Html.Kendo().EditorFor(m => m.Profile.ASAMComments).Tools(t => t.Clear()).HtmlAttributes(new { @class = "kendoEditor", @placeholder = "Enter ASAM Comments ...", @style = "height:15px", @readonly = "readonly" }))
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
    </table>
                }
               </td>
            </tr>
            <tr><td height="20"></td></tr>
      </table>
<div class="padded aligncenter form-actions" id="profileButtonDiv" style="margin-bottom:10px; ">
    @if (Model.EditingEnabled)
    {
        <button type="submit" value="Submit" class="btn btn-group-lg primary-button" id="profileSave">Save</button>
    }
    &nbsp;&nbsp;
    <button type="button" class="btn btn-group-lg primary-button" id="profileCancel">Cancel</button>&nbsp;&nbsp;
    <button type="button" class="btn btn-group-lg primary-button" id="profileReset">Reset</button>&nbsp;&nbsp;
    @if (Model.NewProfile)
    {
        <button type="button" class="btn btn-group-lg primary-button neverDisable" id="profileClose" name="Command">Close</button>
    }
    <br />
</div>
</div>

<script type="text/javascript">
    function ProfileButtonDisable(disabled) {
        $("#profileSave").prop('disabled', disabled);
        $("#profileCancel").prop('disabled', disabled);
        $("#profileReset").prop('disabled', disabled);
    };
    $(function () {
        var container = $("#getClientProfileForm");
         kendo.init(container);
         container.kendoValidator({
             rules: {
                 greaterdate: function (input) {
                     if (input.is("[data-greaterdate-msg]") && input.val() != "" && input.val() != "__/__/____" )
                     {
                         var date = kendo.parseDate(input.val()),
                             otherDate = kendo.parseDate($("[name='" + input.data("greaterdateField") + "']").val());
                         return otherDate == null || otherDate.getTime() < date.getTime();
                     }

                     return true;
                 }
             }
         });

         var initdata = $('#getClientProfileForm').serialize();
         $('#getClientProfileForm').submit(function (e) {           
             e.preventDefault();
             if ($("#hdNewProfile").val() == "True") {
                 if (BeforSave() == false) {
                     e.stopImmediatePropagation();
                     return false;
                 }
                 $("#txtSearchString").val($("#txtCDCRNumber").val());
                 postFormForNewProfile($('#getClientProfileForm'));
                 $("#searchButton").trigger('click');
                 return true;
             }
             else {
                 var nowdata = $('#getClientProfileForm').serialize();
                 if (initdata === nowdata) {
                     NotifyMessage();
                     e.stopPropagation();
                     return false;
                 }
                 if (confirm("Are you sure you want to save the profile changes?") == false) {
                     e.stopPropagation();
                     return false;
                 }
                 initdata = nowdata;
                 ProfileButtonDisable(true);
                 postFormAndReplaceDivHtmlPats($('#getClientProfileForm'));
                 var tabstrip = $("#clienttabstrip").data("kendoTabStrip");
                 var tab = tabstrip.select();
                 tabstrip.reload(tab);
                 return true;
             }
         });

         $('#getClientProfileForm :input').change(function (e) {
             var nowdata = $('#getClientProfileForm').serialize();
             if (initdata === nowdata) {
                 ProfileButtonDisable(true);
             }
             else {
                 ProfileButtonDisable(false);
             }
         });
         $("#NewProfileWindow").keydown(function (e) { if (e.keyCode == 8) e.preventDefault(); });
         $("#divWindow").hide();
         $("#NewProfileWindow").data("kendoWindow").close();
         $("#NewProfileWindow").data("kendoWindow").wrapper.find(".k-i-pdf").click(function (e) {
             $("#gridMyAssignments").getKendoGrid().saveAsPDF();
             e.preventDefault();
         });

         $("#NewProfileWindow").data("kendoWindow").wrapper.find(".k-i-excel").click(function (e) {
             $("#gridMatches").getKendoGrid().saveAsExcel();
             e.preventDefault();
         });
         $(".offenderdp").kendoValidator({
             rules: {
                 dateValidation: function (element) {
                     $(this).removeClass('field-validation-error');
                     $(this).parent().find('span[data-valmsg-for]').remove();
                     if (element.is("[data-val-date]") && element.val() != "") {
                         var value = $(element).val();
                         return is_valid_date(value);
                     }
                     return true;
                 }
             },
             messages: {
                 dateValidation: "must be a valid date",
             }
         });
         $(".offenderdp").kendoMaskedTextBox({
             mask: "00/00/0000"
         });
         $(".offenderdp").closest(".k-datepicker")
               .add($(".offenderdp"))
               .removeClass("k-textbox")
         var validator = $("#SelectedLocationId").kendoValidator().data("kendoValidator");
         return;
     });

        $(".criteriamet").click(function (e) {
            if (this.checked) {
                if (this.id == "InclusionCriteriaMetYes") {
                    $("#InclusionCriteriaMetYes").prop('checked', true);
                    $("#InclusionCriteriaMetNo").prop('checked', false);
                }
                else {
                    $("#InclusionCriteriaMetNo").prop('checked', true);
                    $("#InclusionCriteriaMetYes").prop('checked', false);
                }
            }
        });

        if ($("#hdCanDoASAM").val() == "True") {
            $("#getClientProfileForm .textareaforcasemanngement").prop('readonly', false);
            $(".criteriamet").prop('disabled', false);
            $("#date-picker-asamd").prop("disabled", "");
        }
        else {
            $("#getClientProfileForm .textareaforcasemanngement").prop('readonly', true);
            $(".criteriamet").prop('disabled', true);
            $("#date-picker-asamd").prop("disabled", "disabled");
        }
       if ($("#hdNewProfile").val() == "True")
        {
            var editable = false;

            if ($("#txtCDCRNumber").val() == "") {
                DisableAllInputFields("#getClientProfileForm :input", $("#hdEditingEnabled").val());
                EnableDropDown();
                if ($("#txtCDCRNumber").hasClass("k-state-disabled"))
                    $("#txtCDCRNumber").prop("disabled", editable).removeClass("k-state-disabled");
                if ($("#txtPID").hasClass("k-state-disabled"))
                    $("#txtPID").prop("disabled", editable).removeClass("k-state-disabled");
            }
            else
            {
                editable = true;
                if (!$("#txtCDCRNumber").hasClass("k-state-disabled"))
                    $("#txtCDCRNumber").prop("disabled", editable).addClass("k-state-disabled");
                if (!$("#txtPID").hasClass("k-state-disabled"))
                    $("#txtPID").prop("disabled", editable).addClass("k-state-disabled");

                if ($("#txtFirstName").val() != "" && $("#txtLastName").val() != "") {
                    if (!$("#txtFirstName").hasClass("k-state-disabled"))
                        $('#txtFirstName').attr('readonly', 'readonly')
                    if (!$("#txtLastName").hasClass("k-state-disabled"))
                        $("#txtLastName").attr('readonly', 'readonly');
                }
                else {
                    if ($("#txtFirstName").hasClass("k-state-disabled"))
                        $("#txtFirstName").attr('readonly', '');
                        if ($("#txtLastName").hasClass("k-state-disabled"))
                            $("#txtLastName").attr('readonly', '');
                }
                $(".k-list-container").each(function () {
                    var elementId = this.id.substring(0, this.id.length - 5)
                    var tempDL = $("#" + elementId).data("kendoDropDownList");
                    if (tempDL != undefined) {
                        if (tempDL.element[0].className == "alwayDisabled") {
                            tempDL.enable(false);
                        }
                        else {
                            tempDL.enable(editable);
                        }

                        if (tempDL.element[0].id === "SelectedLocationId") {
                            EnableDropDown();
                        }
                    }
                });

                $(".k-calendar-container").each(function () {
                    var elementId = this.id.split("_")[0];
                    var tempDP = $("#" + elementId).data("kendoDatePicker");
                    if (tempDP != undefined) {
                        tempDP.enable(editable);
                    }
                });
            }
       }
        else
        {
            DisableAllInputFields("#getClientProfileForm :input", $("#hdEditingEnabled").val());
            EnableDropDown();
        }
       ProfileButtonDisable(true);
        function BeforSave(e) {
            var first = document.getElementById("txtFirstName").value;
            var last = document.getElementById("txtLastName").value;
            var gender = document.getElementById("ddlGender").value;

            if (last == null || last.length == 0) {
                alert("Last Name is required.");
                return false;
            }

            if (first == null || first.length == 0) {
                alert("First Name is required.");
                return false;
            }

            if (gender == null || gender < 1) {
                alert("Must select Gender.");
                return false;
            }
            return true;
        }

        function ISMIPDatePickerChanges() {
            if ($("#date-picker-ismipe").val() == "" || $("#date-picker-ismipe").val() == "__/__/____") {
                $("#date-picker-ismipc").data("kendoDatePicker").enable(false);
                $("#date-picker-ismipc").data("kendoDatePicker").value("");
            }
            else {
                $("#date-picker-ismipc").data("kendoDatePicker").enable(true);
            }
        }
        function CMDatePickerChanges() {
            if ($("#date-picker-cms").val() == "" || $("#date-picker-cms").val() == "__/__/____") {
                $("#date-picker-cmc").data("kendoDatePicker").enable(false);
                $("#date-picker-cmc").data("kendoDatePicker").value("");
            }
            else {
                $("#date-picker-cmc").data("kendoDatePicker").enable(true);
            }

        }
        function MATDatePickerChanges() {
            if ($("#date-picker-mats").val() == "" || $("#date-picker-mats").val() == "__/__/____") {
                $("#date-picker-matc").data("kendoDatePicker").enable(false)
                $("#date-picker-matc").data("kendoDatePicker").value("");
            }
            else {
                $("#date-picker-matc").data("kendoDatePicker").enable(true)
            }
        }
        function CmrpeDatePickerChanges() {
            if ($("#date-picker-cmrpes").val() == "" || $("#date-picker-cmrpes").val() == "__/__/____") {
                $("#date-picker-cmrpec").data("kendoDatePicker").enable(false)
                $("#date-picker-cmrpec").data("kendoDatePicker").value("");
            }
            else {
                $("#date-picker-cmrpec").data("kendoDatePicker").enable(true)
            }
        }
        function CaseDatePickerChanges() {
            var bankDate = $("#date-picker-banked").data("kendoDatePicker");
            var closeDate = $("#date-picker-closure").data("kendoDatePicker");
            var intakeDate = $("#date-picker-intake").data("kendoDatePicker");
            if ($("#date-picker-intake").val() == "" || $("#date-picker-intake").val() == "__/__/____") {
                closeDate.enable(false);
                bankDate.enable(false);
                closeDate.value("");
                bankDate.value("");
                $("#ddlClosurereaon").val("-1");
            }
            else {
                if ($("#date-picker-banked").val() != "" && $("#date-picker-banked").val() != "__/__/____") {
                    closeDate.enable(false);
                    bankDate.enable(true);
                }
                else if ($("#date-picker-closure").val() != "" && $("#date-picker-closure").val() != "__/__/____") {
                    closeDate.enable(false);
                    bankDate.enable(false);
                    intakeDate.enable(true);
                }
                else if (($("#date-picker-banked").val() == "" || $("#date-picker-banked").val() == "__/__/____") &&
                         ($("#date-picker-closure").val() == "" || $("#date-picker-banked").val() == "__/__/____")) {
                    closeDate.enable(true);
                    bankDate.enable(true);
                    $("#ddlClosurereaon").val("-1");
                }
            }
        }
   
        $("#ddlClosurereaon").on('change', function () {
            if ($("#ddlClosurereaon").val() != "-1" && $("#date-picker-closure").val() == "") {
                $("#date-picker-banked").val("");
                $("#date-picker-banked").data("kendoDatePicker").enable(false);
                $("#date-picker-closure").data("kendoDatePicker").enable(true);
            }
            else if ($("#ddlClosurereaon").val() != "-1" && $("#date-picker-closure").val() != "" &&
                $("#date-picker-closure").val() != "__/__/____" && $("#date-picker-closure").val() != "") {
                CaseDatePickerChanges();
                UpdateCaseStatus(2);
            }
        });

        function UpdateCaseStatus(caseStatus) {
            var changeDate = "";    
            if (caseStatus == 3)
                changeDate = $("#date-picker-banked").val();
            else if (caseStatus == 2)
                changeDate = $("#date-picker-closure").val();
            else if (caseStatus == 1)
                changeDate = $("#date-picker-intake").val();

            var getParams = { "EpisodeId": $("#hdEpisodeID").val(), "ChangeDate": changeDate, "CloseReason": (caseStatus == 2 ? $("#ddlClosurereaon").val() : "-1"), "CaseType": caseStatus };
            $.ajax({
                url: '@(Url.Action("ResetCaseStatus", "Client"))',
                data: getParams,
                success: function (result) {
                    if (caseStatus != 3) {
                        var dropdown1 = $("#AllOffenderResults").data("kendoDropDownList");
                        dropdown1.dataSource.read({ text: $("#hdCDCRNumber").val() });
                        var dropdown = $("#AllSelectedOffenderEpisodeResult").data("kendoDropDownList");
                        dropdown.dataSource.read({ EpisodeID: $("#AllOffenderResults").val() });
                        $("#hdReloadRequest").val("False");
                        var edit = (caseStatus == 1) ? true : false;
                        DisableInputFields("#getClientProfileForm :input", edit);
                        EnableDropDown();
                        ProfileButtonDisable(true);
                    }
                    else
                        LoadSummary($("#hdEpisodeID").val());
                },
                error: function (xlerror) {
                    alert("Dynamic content load failed.");
                    return false;
                }
            });
        }

        //only allow numeric
        $(".numberonly").keypress(function (e) {
            var verified = (e.which == 8 || e.which == undefined || e.which == 0) ? null : String.fromCharCode(e.which).match(/[^0-9]/);
            if (verified) { e.preventDefault(); }
        });

        $("#txtCDCRNumber").on('change', function (e) {
            $("#hdCDCRNumber").val($("#txtCDCRNumber").val());
        })

        $("#txtPID").on('change', function (e) {
            $("#hdPID").val($("#txtPID").val());
        })

        $("#profileReset").click(function () {
            $("#getClientProfileForm :input").each(function () {
                if (this.type == "checkbox")
                    $(this).prop('checked', false);

                if (this.type == "text" || this.type == "textarea") {
                    $(this).val('');
                }
            })

            $("#getClientProfileForm select").each(function () {
                this.selectedIndex = 0;
            });
        });

        $("#profileCancel").click(function () {
            document.getElementById("getClientProfileForm").reset();
            ProfileButtonDisable(true);
        })

        $("#profileClose").click(function () {
            var element = document.getElementById("divClientprofile");
            if (element != null || element != undefined)
                element.parentNode.removeChild(element);
            var element = document.getElementById("divSummary");
            element.parentNode.removeChild(element);
            var ddl = $("#AllOffenderResults").data("kendoDropDownList");
            ddl.select(0);
            var ddl1 = $("#AllSelectedOffenderEpisodeResult").data("kendoDropDownList");
            ddl1.select(0);
        });

</script>
}
</div>



