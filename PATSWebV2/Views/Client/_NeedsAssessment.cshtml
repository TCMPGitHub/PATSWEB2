@using Kendo.Mvc.UI
@model PATSWebV2.ViewModels.SocialWork.AssessmentViewModel

@using (Ajax.BeginForm("SaveNeedAssessment", "Client", null, new AjaxOptions
{
    HttpMethod = "Post",
    UpdateTargetId = "viewPlaceHolder",
    InsertionMode = InsertionMode.Replace,
    OnSuccess = "OnAjaxSuccess"
}, new
{
    @id = "assessmentform",
    @name = "Case Management Re-entry Needs Assessment",
    @style = "min-height: 500px;overflow:hidden;",
    @class = "color-danger"
}))
{   
    <div id="appointmentdiv" class="color-danger" style="height:100%;min-width:1200px;margin-top:10px;">       
        @Html.HiddenFor(m => m.EpisodeID)
        @Html.HiddenFor(m => m.CanEdit, new { @id = "hdEditable" })
        @Html.HiddenFor(m => m.NeedsAssessmentSet.IsLastNeedsAssessmentSet, new { id = "hdIsLastNeedsAssessmentSet" })
        @Html.HiddenFor(m => m.NeedsAssessmentSet.IRPID, new { id = "hdIRPID" })
        <table style="background-color:transparent;min-width:600px">
            <tr>
                @{
                    var show = (Model.NeedsAssessmentSet.AssessmentId > 0) ? "visible" : "hidden";
                }
                <td style="width:75vw">
                    <table>
                        <tr style="line-height: 10px !important;"><td id="customers">@Html.Label("STATE OF CALIFORNIA", new { style = "float:left;font-size:12px;" })</td></tr>
                        <tr style="line-height: 10px !important;"><td>@Html.Label("CASE MANAGEMENT RE-ENTRY NEEDS ASSESSMENT", new { style = "float:left;font-weight:bold;font-size:14px;" })&nbsp;&nbsp;@Model.NoEditAllowed</td></tr>
                        <tr style="line-height: 10px !important;">
                            <td>
                                @Html.Label("CDCR 2286(11/14)", new { style = "float:left;font-size:12px;" })&nbsp;&nbsp;
                                <a style="visibility:@show;" href="javascript:printPATSPDF(@Model.EpisodeID, @Model.NeedsAssessmentSet.AssessmentId, 'Case Management Re-entry Needs Assessment','color-danger')">
                                    <img style="width:22px; height:22px;margin-top:-5px;" title="Print Case Needs Assessment" src='@Url.Content("~/Content/images/printer-icon.png")' /></a>
                            </td>
                        </tr>
                    </table>
                </td>
                <td style="width:25vw;align-content:stretch;float:right">
                    <table id="gird" class="k-grid table-bordered" style="width:100%;background-color:white; min-width:200px;">
                        <tr style="background-color:silver;height:10px!important;font-size:11px;text-align:center;" class="k-grid-header k-header table-bordered">
                            <th>ASSESSMENT DATE:</th>
                            <th>RATER:</th>
                        </tr>
                        <tr style="text-align:left;height:12px!important;">
                            <td style="font-size:11px;width: 40%;">
                                <script>
                                    var edit = ($("#hdIsLastNeedsAssessmentSet").val() == "True" && $("#hdEditable").val() == "True");
                                    $('#assessmentform').on('dblclick', '.textareaforcasemanngement', function (e) {
                                        TextarePopup(e, edit, "color-danger");
                                    });
                                    $('#assessmentform').on('keyup', '.textareaforcasemanngement', function (e) {
                                        if (e.keyCode == '90' && e.ctrlKey) {
                                            $(this).trigger('dblclick');
                                        }
                                    })
                                  
                                function PopulatePreviousNASet(e) {
                                    var object = this.dataItem(this.select());
                                    if (this.select() == 0) {
                                        DisableAllInputFields("#assessmentform :input", $("#hdEditable").val(), false);
                                        return;
                                    }
                                        var id = (object == undefined || object.AssessmentID == "") ? 0 : object.AssessmentID;
                                        $.ajax({
                                            url: "@Url.Action("GetNeedsAssessmentSet", "Client")",
                                            data: {
                                                EpisodeID: $("#hdEpisodeID").val(), AssessmentId: id },
                                        cache: false,
                                        type: "POST",
                                        dataType: "html",
                                        success: function (data, textStatus, XMLHttpRequest) {
                                            $("#assessmentform").replaceWith(data); // HTML DOM replace
                                        }
                                    })
                                    }
                                    function onDataBound(e)
                                    {
                                       if (this.selectedIndex == 0)
                                            this.select(1);
                                    }
                                </script>
                                @(Html.Kendo().DropDownListFor(m => m.NeedsAssessmentSet.AssessmentId)
                .Name("AllNADates")
                .OptionLabel("Select Dates...")
                .DataTextField("AssessmentDate")
                .DataValueField("AssessmentID")
                .HtmlAttributes(new { style = "width:110px;text-align:left;", @class = "neverDisable" })
                .Filter(FilterType.Contains)
                .Height(290)
                .Events(e => { e.Change("PopulatePreviousNASet"); e.DataBound("onDataBound"); })
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetNeedsAssessmentDateList", "Client", new { EpisodeID = Model.EpisodeID }));

                }))
                            </td>
                            <td style="font-size:11px">@Html.DisplayFor(m => m.ActionUserName)</td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        <table id="gird" class="k-grid" style="background-color:white;min-width:1200px;width:99.8%;">
            <tr style="background-color:silver;font-size:small;" class="k-grid-header k-header table-bordered">
                <th style="text-align:center;" rowspan="2">PRESENTING NEED</th>
                <th style="text-align:center;" colspan="4">NEED</th>
                <th style="text-align:center;" rowspan="2">DESCRIPTION OF CURRENT NEED </th>
            </tr>
            <tr style="background-color:silver;font-size:small;" class="k-grid-header k-header table-bordered">
                <th>NO</th>
                <th>LOW</th>
                <th>MOD</th>
                <th>HIGH/URG</th>
            </tr>

            @for (int i = 0; i < Model.IRPSetList.Count; i++)
                {
                @Html.HiddenFor(m => m.IRPSetList[i].NeedId, new { @id = "hdNeedId" })
                <tr>
                    <td style="vertical-align:top;width:40%;">
                        @Html.Raw(string.Format("<b>{0}.   {1}</b>", Model.IRPSetList[i].NeedId, Model.IRPSetList[i].Need))
                    </td>
                    <td style="vertical-align:top;">&nbsp;&nbsp;@(Html.Kendo().CheckBoxFor(m => m.IRPSetList[i].NeedStatus1).Checked(Model.IRPSetList[i].NeedStatus1.HasValue ? Model.IRPSetList[i].NeedStatus1.Value : false).HtmlAttributes(new { @class = "needAssessStatus" }))</td>
                    <td style="vertical-align:top;">&nbsp;&nbsp;@(Html.Kendo().CheckBoxFor(m => m.IRPSetList[i].NeedStatus2).Checked(Model.IRPSetList[i].NeedStatus2.HasValue ? Model.IRPSetList[i].NeedStatus2.Value : false).HtmlAttributes(new { @class = "needAssessStatus" }))</td>
                    <td style="vertical-align:top;">&nbsp;&nbsp;@(Html.Kendo().CheckBoxFor(m => m.IRPSetList[i].NeedStatus3).Checked(Model.IRPSetList[i].NeedStatus3.HasValue ? Model.IRPSetList[i].NeedStatus3.Value : false).HtmlAttributes(new { @class = "needAssessStatus" }))</td>
                    <td style="vertical-align:top;">&nbsp;&nbsp;@(Html.Kendo().CheckBoxFor(m => m.IRPSetList[i].NeedStatus4).Checked(Model.IRPSetList[i].NeedStatus4.HasValue ? Model.IRPSetList[i].NeedStatus4.Value : false).HtmlAttributes(new { @class = "needAssessStatus" }))</td>
                    <td style="vertical-align:top;width:40%;line-height:14px;">@Html.TextAreaFor(m => m.IRPSetList[i].DescriptionCurrentNeed, new { @class = "textareaforcasemanngement", @placeholder = "Description of Current Need ...", @maxLength = "500", height = "30" })</td>
                </tr>
            }
        </table>
        <table class="table table-condensed" style="background-color:white; margin-top:10px;width:99.8%;">
            <tr>
                <td colspan="5">
                    @Html.Label("ADDITIONAL INFORMATION")
                    @Html.TextAreaFor(m => m.NeedsAssessmentSet.AdditionalInformation, new { @class = "textareaforcasemanngement", @placeholder = "Additional Information ...", @maxLength = "500", height = "60", style = "height:60px;" })
                </td>
            </tr>
            <tr>
                <td width="200">@Html.Label("INTERPRETER NEEDED:")&nbsp;</td>
                <td width="60">@(Html.Kendo().CheckBoxFor(m => m.NeedsAssessmentSet.InterpreterNeededYes).Checked(Model.NeedsAssessmentSet.InterpreterNeededYes.HasValue && Model.NeedsAssessmentSet.InterpreterNeededYes.Value == true ? true : false).Label("YES").HtmlAttributes(new { @style="margin-top:10px;", @class = "interpreterNeeded" }))</td>
                <td width="60"> @(Html.Kendo().CheckBoxFor(m => m.NeedsAssessmentSet.InterpreterNeededNo).Checked(Model.NeedsAssessmentSet.InterpreterNeededNo.HasValue && Model.NeedsAssessmentSet.InterpreterNeededNo.Value == true ? true : false).Label("NO").HtmlAttributes(new { @style = "margin-top:10px;", @class = "interpreterNeeded" }))</td>
                <td width="165">&nbsp;&nbsp;@Html.Label("IF SO, LANGUAGE:")&nbsp;&nbsp;&nbsp;&nbsp;</td>
                <td>
                    @(Html.Kendo().TextBoxFor(m => m.NeedsAssessmentSet.AssessmentLauguage).HtmlAttributes(new { @placeholder = "Language", @spellcheck = "true", onkeypress = "IgnoreEnterKey(event)", @maxLength = "10", @style="margin-top:5px;" }))
                </td>
            </tr>
        </table>
        <table id="gird" class="k-grid" style="background-color:white;min-width:1200px;width:99.8%;border-style:none">
            <tr style="margin-left:20px;border-style:none">
                <td colspan="3">
                    @Html.Label("MULTNOMAH COMMUNITY ABILITY SCALE SCORE")<br /><center>
                        @Html.Label("SCORE:")&nbsp;
                        <span class="TotalScore2Class" style="color: green;font-weight:bold;font-size:large">@Html.DisplayFor(m => m.NeedsAssessmentSet.MCASRScore)</span>
                    </center><br />
                </td>
            </tr>
            <tr style="margin-left:20px;border-style:none">
                <td class="col-xs-4" style="margin-left:20px;border-style:none"><center>@Html.Label("17-47 = SEVERELY DISABLED/EOP (INPATIENT/BOARD AND CARE)")</center></td>
                <td class="col-xs-4" style="text-align:center;border-style:none;">@Html.Label("48-62 = MEDIUM ABILITIES (LEVEL/CCCMS)")</td>
                <td class="col-xs-4" style="text-align:center;border-style:none;">@Html.Label("63-85 = HIGH FUNCTIONING LEVEL/CCCMS")</td>
            </tr>
        </table>
        <br />
        <table id="gird" class="k-grid" style="background-color:white;min-width:1200px;width:99.8%;">
            <tr style="text-align:center; background-color:silver;font-size:small;" class="k-grid-header k-header table-bordered">
                <th colspan="2" style="text-align:center;">@Html.Label("CASE MANAGEMENT SERVICE NEEDS SCALE")</th>
            </tr>
            <tr>
                <td width="200px">
                    &nbsp;&nbsp;
                    @(Html.Kendo().CheckBoxFor(m => m.NeedsAssessmentSet.ServiceHighNeeds).Checked(Model.NeedsAssessmentSet.ServiceHighNeeds.HasValue && Model.NeedsAssessmentSet.ServiceHighNeeds.Value == true ? true : false).Label("HIGH NEEDS").HtmlAttributes(new { @class = "serviceStatus" }))
                </td>
                <td style="white-space: normal">
                    &#8226;&nbsp;@Html.Label("", String.Format("Urgent Case Management Services needed."))<br />
                    &nbsp;&nbsp;<label style="line-height:14px;font-weight:normal">Parolee has not established or maintained viable links to community service provides for his/her core Presenting Needs. Continued Clinical Case Management services are essential to assist this Parolee with his/her individual Reentry Plan (IRP).</label>
                </td>
            </tr>
            <tr>
                <td>
                    &nbsp;&nbsp;
                    @(Html.Kendo().CheckBoxFor(m => m.NeedsAssessmentSet.ServiceModNeeds).Checked(Model.NeedsAssessmentSet.ServiceModNeeds.HasValue && Model.NeedsAssessmentSet.ServiceModNeeds.Value == true ? true : false).Label("MODERATE NEEDS").HtmlAttributes(new { @class = "serviceStatus" }))
                </td>
                <td style="white-space: normal;">
                    &#8226;&nbsp;@Html.Label("", String.Format("Moderate need for Case Management Services."))<br />
                    &nbsp;&nbsp;<label style="line-height:14px;font-weight:normal">Parolee has established and maintained a sufficient number of viable links to community service providers for a significant portion of his/her core Presenting Needs.  Parolee is in compliance with the terms of his/her parole, and is making positive progress with his/her individual Reentry Plan (IRP).  Parolee will benefit from continued Case Management services to reach a Low Needs category.</label>
                </td>
            </tr>
            <tr>
                <td style="white-space: normal">
                    &nbsp;&nbsp;
                    @(Html.Kendo().CheckBoxFor(m => m.NeedsAssessmentSet.ServiceLowNeeds).Checked(Model.NeedsAssessmentSet.ServiceLowNeeds.HasValue && Model.NeedsAssessmentSet.ServiceLowNeeds.Value == true ? true : false).Label("LOW NEEDS").HtmlAttributes(new { @class = "serviceStatus" }))
                </td>
                <td style="white-space: normal">
                    &#8226;&nbsp;@Html.Label("", String.Format("Low need for Case Management services."))<br />
                    &nbsp;&nbsp;<label style="line-height:14px;font-weight:normal">Parolee has established and maintained a sufficient number of viable links to community service providers for a majority of his/her core Presenting Needs.  Parolee is in compliance with the terms of his/her parole, and is making significant progress with his/her individual Reentry Plan (IRP).  Case Management services will be at a monitoring level only so as to not impede progress.</label>
                </td>
            </tr>
        </table>
        <br />
        <div class="padded aligncenter" id="addNewCaseReEntryIMHSDiv">
            @if (Model.CanEdit)
                {
                <button type="submit" class="btn btn-group-lg danger-button" id="needsAssSave">Submit</button>
            }&nbsp;&nbsp;
            <button type="button" class="btn btn-group-lg danger-button" id="needsAssCancel">Cancel</button>
            <button type="button" class="btn btn-group-lg danger-button" id="needsAssReset">Reset</button>&nbsp;&nbsp;
            @if (Model.NeedsAssessmentSet != null && Model.NeedsAssessmentSet.AssessmentId > 0)
            {
                <a href="javascript:printPATSPDF(@Model.EpisodeID,@Model.NeedsAssessmentSet.AssessmentId, 'Case Management Re-entry Needs Assessment','color-danger')">
                    <img style="width:22px; height:22px;" title="Print Case Needs Assessment" src='@Url.Content("~/Content/images/printer-icon.png")' /></a>
            }
        </div>
        <br />
    </div>
}

<script type="text/javascript">
    function NEEDSButtonDisable(disabled) {
        $("#needsAssSave").prop('disabled', disabled);
        $("#needsAssCancel").prop('disabled', disabled);
        $("#needsAssReset").prop('disabled', disabled);
    }
    $(function () {
        var initdata = $('#assessmentform').serialize();
        $('#assessmentform').submit(function (e) {
            e.preventDefault();
            var nowdata = $('#assessmentform').serialize();
            if (initdata === nowdata) {
                NoticeNoChanges();
                e.stopPropagation();
                return false;
            }
            if (confirm("Are you sure you want to save this Assessment?") == false) {
                e.stopPropagation();
                return false;
            }
            initdata = nowdata;
            postFormAndReplaceDivHtmlPats($('#assessmentform'));
            var tabstrip = $("#swTabstrip").data("kendoTabStrip");
            var tab = tabstrip.select();
            tabstrip.reload(tab);
            return true;
        });
        $("#assessmentform :input").change(function (e) {
            var nowdata = $('#assessmentform').serialize();
            if (initdata === nowdata) {
                NEEDSButtonDisable(true);
            }
            else {
                NEEDSButtonDisable(false);
            }
        });
    });
    
    $('#printNALink').on('click', function () {
        var url = document.getElementById('printNALink').href;
        var substr = "AssessmentId=";
        var caseID = $("#AllNADates").val();
        if (url.indexOf("AssessmentId") > 0) {
            substr = url.substring(url.indexOf("AssessmentId"));
            url = url.substring(0, url.indexOf("&"));
            var oldcaseId = substr.substring(substr.indexOf('=') + 1);
            substr = substr.replace(oldcaseId, caseID);
        }
        else {
            substr = substr + caseID;
        }
        url = url + "&" + substr;
        this.href = url;
    })

    $(".needAssessStatus").click(function (e) {
        if ($(this).prop('checked')) {
            var rownum = this.name.substring((this.name.indexOf('[') + 1), (this.name.indexOf(']')));
            var statusid = this.name.substring(this.name.length - 1, this.name.length);
            $(".needAssessStatus").each(function () {
                if (this.name.substring((this.name.indexOf('[') + 1), (this.name.indexOf(']'))) == rownum &&
                     this.name.substring(this.name.length - 1, this.name.length) != statusid) {
                    $(this).prop('checked', false);
                }
            })
        }
    })

    $(".serviceStatus").click(function (e) {
        if ($(this).prop('checked')) {
            var objId = this.id;
            $(".serviceStatus").each(function () {
                if (this.id != objId) {
                    $(this).prop('checked', false);
                }
            })
        }
    })
    $(".interpreterNeeded").click(function (e) {
        if ($(this).prop('checked')) {
            var objId = this.id;
            $(".interpreterNeeded").each(function () {
                if (this.id != objId) {
                    $(this).prop('checked', false);
                }
            })
        }
    })
    $("#needsAssReset").click(function () {
        $("#assessmentform :input").each(function () {
            if (this.type == "checkbox")
                $(this).prop('checked', false);

            if (this.type == "text" || this.type == "textarea") {
                $(this).val('');
            }
        })
    });

    var editableNA = EditableEpisode($("#hdEditable").val()) && $("#hdIsLastNeedsAssessmentSet").val() == "True";
    DisableAllInputFields("#assessmentform :input", $("#hdEditable").val(), editableNA);
    NEEDSButtonDisable(true);
    $("#needsAssCancel").click(function () {
        document.getElementById("assessmentform").reset();
        NEEDSButtonDisable(true);
    })
</script>
