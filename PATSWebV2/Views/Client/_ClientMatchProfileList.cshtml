@using Kendo.Mvc.UI;
@model PATSWebV2.ViewModels.Client.ClientMatchViewModel


<script type="text/javascript">
    function GetParameters() {
        return { PID : $("#hdPID").val(), CDCRNum : $("#hdCDCRNumber").val() }
    }
    function BuildNavClientLink(CDCRNums) {
        var result = "";
        var action = '@Url.Action("Index", "Client")';
        if (CDCRNums != undefined && CDCRNums != "") {
            var data = CDCRNums.split(';');
            for (var i = 0; i < data.length; i++) {
                var temp = kendo.format("<a href='{0}/?CDCRNum={1}'>" + data[i] + "</a>",
                        action,
                        data[i]
                    );
                if (result.length == 0)
                    result = temp;
                else
                    result += '<br/>' + temp;
            }
        }
        return result;
    }
    function GetMatchedData() {
        $.ajax({
            url: '@(Url.Action("GetClientProfile", "Client"))',
            data: {"EpisodeID":0, "PID": $("#txtPID").val(), "CDCRNum": $("#txtCDCRNumber").val(), "NewEpisode": true },
            type: "POST",
            dateType:"html",
            success: function (data) {
                $("#getClientProfileForm").replaceWith(data)
            },
            error: function (emp) {
                alert('error retrieve matches episode.');
                return false;
            }           
        });
        return false;
    }
    function CreateNewClient(e)
    {
        e.preventDefault();
        $("#divWindow").hide();
        $("#NewProfileWindow").data("kendoWindow").close();
        var existcdcr = false;
        $.ajax({
            url: '@(Url.Action("ValidCDCRNumber", "Client"))',
            data: { "CDCRNum": $("#hdCDCRNumber").val() },
            type:"POST",
            success: function (data) {
                if (data == "False")
                {
                    $("#txtCDCRNumber").val() === ""
                    alert("CDCR # " + $("#txtCDCRNumber").val() + " is already assinged.");
                    return false;
                }
               else
                   GetMatchedData();
            },
            error: function (emp) {
                alert('error retrieve matches episode.');                
            }
        });
        return false;
    }
</script>

@(Html.Kendo().Grid<IdentityManagement.Entities.MatchClient>
    ()
    .Name("gridMatches")
    .NoRecords("No Matches found...")
    .Sortable(sortable => sortable.AllowUnsort(true))
    .Filterable(filterable => filterable
    .Extra(false)
    .Operators(operators =>
    {
        operators
        .ForString(str => str.Clear()
        .StartsWith("Starts with")
        .IsEqualTo("Is equal to")
        );
    })
    )
    .Columns(columns =>
    {
        columns.Bound(f => f.EpisodeId).Hidden();
        columns.Bound(f => f.PID).Hidden();
        columns.Bound(f => f.CDCRNumber).Title("CDCR#").Width(60).HeaderHtmlAttributes(new { style = "font-weight:bold; color:darkblue;text-align:center;" }).ClientTemplate("#= BuildNavClientLink(CDCRNumber)#");
        columns.Bound(f => f.Name).Title("Client Name").Width(160).HeaderHtmlAttributes(new { style = "font-weight:bold; color:darkblue;text-align:center;" });
        columns.Bound(f => f.DOB).Title("DOB").Width(120).HeaderHtmlAttributes(new { style = "font-weight:bold; color:darkblue;text-align:center;" });
        columns.Bound(f => f.MatchGender).Title("Gender").Width(60).HeaderHtmlAttributes(new { style = "font-weight:bold; color:darkblue;text-align:center;" });
        columns.Bound(f => f.CaseClosureDate).Title("Case Closure").Width(160).HeaderHtmlAttributes(new { style = "font-weight:bold; color:darkblue;text-align:center;" });
        columns.Bound(f => f.CaseCloseReason).Title("Case Closure Reason").Width(160).HeaderHtmlAttributes(new { style = "font-weight:bold; color:darkblue;text-align:center;" });
    })
    .Sortable(sortable => sortable.AllowUnsort(true))
    .Scrollable(a => a.Height("25vh"))
    .Resizable(resizable => resizable.Columns(true))
    .DataSource(dataSource => dataSource
    .Ajax()
    .PageSize(10)
    .Model(m => { m.Id(f => f.PID); })
    .Model(m => { m.Id(f => f.EpisodeId); })
    .Read(read => read.Action("MatchesRead", "Client").Data("GetParameters"))
    )
)
<div style="align-content:center">
    @(Html.Kendo().Button().Name("CreateNew").Events(e => e.Click("CreateNewClient")).Content("Create New Client").HtmlAttributes(new { style = "width:150px; height:25px; Margin-top:15px;Margin-left:45%" }))
</div>

